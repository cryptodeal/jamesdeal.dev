import { respond } from '@sveltejs/kit/ssr';
import {
	create_ssr_component,
	validate_component,
	missing_component,
	escape,
	compute_rest_props,
	spread,
	subscribe,
	add_attribute,
	each
} from 'svelte/internal';
import {
	setContext,
	afterUpdate,
	onMount,
	getContext,
	createEventDispatcher,
	beforeUpdate
} from 'svelte';
import cookie from 'cookie';
import { v4 } from '@lukeed/uuid';
import mongoose from 'mongoose';
import { Octokit } from '@octokit/rest';
import { writable, derived } from 'svelte/store';
import { scaleLinear, scaleSqrt, scaleQuantize } from 'd3-scale';
import { nest } from 'd3-collection';
import { timeFormat } from 'd3-time-format';
import { timeDay } from 'd3-time';
var root_svelte_svelte_type_style_lang =
	'#svelte-announcer.svelte-u7bl1d {\n  position: absolute;\n  left: 0;\n  top: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  overflow: hidden;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n}';
const css$9 = {
	code:
		'#svelte-announcer.svelte-u7bl1d{position:absolute;left:0;top:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px}',
	map: `{"version":3,"file":"root.svelte","sources":["root.svelte"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit \u2014 do not edit it! -->\\n<script>\\n\\timport { setContext, afterUpdate, onMount } from 'svelte';\\n\\n\\t// stores\\n\\texport let stores;\\n\\texport let page;\\n\\n\\texport let components;\\n\\texport let props_0 = null;\\n\\texport let props_1 = null;\\n\\texport let props_2 = null;\\n\\texport let props_3 = null;\\n\\texport let props_4 = null;\\n\\n\\tsetContext('__svelte__', stores);\\n\\n\\t$: stores.page.set(page);\\n\\tafterUpdate(stores.page.notify);\\n\\n\\tlet mounted = false;\\n\\tlet navigated = false;\\n\\tlet title = null;\\n\\n\\tonMount(() => {\\n\\t\\tconst unsubscribe = stores.page.subscribe(() => {\\n\\t\\t\\tif (mounted) {\\n\\t\\t\\t\\tnavigated = true;\\n\\t\\t\\t\\ttitle = document.title || 'untitled page';\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tmounted = true;\\n\\t\\treturn unsubscribe;\\n\\t});\\n</script>\\n\\n<svelte:component this={components[0]} {...(props_0 || {})}>\\n\\t{#if components[1]}\\n\\t\\t<svelte:component this={components[1]} {...(props_1 || {})}>\\n\\t\\t\\t{#if components[2]}\\n\\t\\t\\t\\t<svelte:component this={components[2]} {...(props_2 || {})}>\\n\\t\\t\\t\\t\\t{#if components[3]}\\n\\t\\t\\t\\t\\t\\t<svelte:component this={components[3]} {...(props_3 || {})}>\\n\\t\\t\\t\\t\\t\\t\\t{#if components[4]}\\n\\t\\t\\t\\t\\t\\t\\t\\t<svelte:component this={components[4]} {...(props_4 || {})}/>\\n\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t</svelte:component>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</svelte:component>\\n\\t\\t\\t{/if}\\n\\t\\t</svelte:component>\\n\\t{/if}\\n</svelte:component>\\n\\n{#if mounted}\\n\\t<div id=\\"svelte-announcer\\" aria-live=\\"assertive\\" aria-atomic=\\"true\\">\\n\\t\\t{#if navigated}\\n\\t\\t\\t{title}\\n\\t\\t{/if}\\n\\t</div>\\n{/if}\\n\\n<style>#svelte-announcer {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  clip: rect(0 0 0 0);\\n  clip-path: inset(50%);\\n  overflow: hidden;\\n  white-space: nowrap;\\n  width: 1px;\\n  height: 1px;\\n}</style>"],"names":[],"mappings":"AA+DO,iBAAiB,cAAC,CAAC,AACxB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACnB,SAAS,CAAE,MAAM,GAAG,CAAC,CACrB,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,AACb,CAAC"}`
};
const Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { stores } = $$props;
	let { page: page2 } = $$props;
	let { components } = $$props;
	let { props_0 = null } = $$props;
	let { props_1 = null } = $$props;
	let { props_2 = null } = $$props;
	let { props_3 = null } = $$props;
	let { props_4 = null } = $$props;
	setContext('__svelte__', stores);
	afterUpdate(stores.page.notify);
	let mounted = false;
	let navigated = false;
	let title = null;
	onMount(() => {
		const unsubscribe = stores.page.subscribe(() => {
			if (mounted) {
				navigated = true;
				title = document.title || 'untitled page';
			}
		});
		mounted = true;
		return unsubscribe;
	});
	if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
		$$bindings.stores(stores);
	if ($$props.page === void 0 && $$bindings.page && page2 !== void 0) $$bindings.page(page2);
	if ($$props.components === void 0 && $$bindings.components && components !== void 0)
		$$bindings.components(components);
	if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
		$$bindings.props_0(props_0);
	if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
		$$bindings.props_1(props_1);
	if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
		$$bindings.props_2(props_2);
	if ($$props.props_3 === void 0 && $$bindings.props_3 && props_3 !== void 0)
		$$bindings.props_3(props_3);
	if ($$props.props_4 === void 0 && $$bindings.props_4 && props_4 !== void 0)
		$$bindings.props_4(props_4);
	$$result.css.add(css$9);
	{
		stores.page.set(page2);
	}
	return `


${validate_component(components[0] || missing_component, 'svelte:component').$$render(
	$$result,
	Object.assign(props_0 || {}),
	{},
	{
		default: () =>
			`${
				components[1]
					? `${validate_component(components[1] || missing_component, 'svelte:component').$$render(
							$$result,
							Object.assign(props_1 || {}),
							{},
							{
								default: () =>
									`${
										components[2]
											? `${validate_component(
													components[2] || missing_component,
													'svelte:component'
											  ).$$render(
													$$result,
													Object.assign(props_2 || {}),
													{},
													{
														default: () =>
															`${
																components[3]
																	? `${validate_component(
																			components[3] || missing_component,
																			'svelte:component'
																	  ).$$render(
																			$$result,
																			Object.assign(props_3 || {}),
																			{},
																			{
																				default: () =>
																					`${
																						components[4]
																							? `${validate_component(
																									components[4] || missing_component,
																									'svelte:component'
																							  ).$$render(
																									$$result,
																									Object.assign(props_4 || {}),
																									{},
																									{}
																							  )}`
																							: ``
																					}`
																			}
																	  )}`
																	: ``
															}`
													}
											  )}`
											: ``
									}`
							}
					  )}`
					: ``
			}`
	}
)}

${
	mounted
		? `<div id="${'svelte-announcer'}" aria-live="${'assertive'}" aria-atomic="${'true'}" class="${'svelte-u7bl1d'}">${
				navigated ? `${escape(title)}` : ``
		  }</div>`
		: ``
}`;
});
function set_paths(paths) {}
function set_prerendering(value) {}
mongoose.connect('mongodb://127.0.0.1:27017/jamesdeal', {
	useNewUrlParser: true,
	useUnifiedTopology: true,
	useCreateIndex: true,
	useFindAndModify: false
});
const handle = async ({ request, render: render2 }) => {
	const cookies = cookie.parse(request.headers.cookie || '');
	request.locals.userid = cookies.userid || v4();
	if (request.query.has('_method')) {
		request.method = request.query.get('_method').toUpperCase();
	}
	const response = await render2(request);
	if (!cookies.userid) {
		response.headers['set-cookie'] = `userid=${request.locals.userid}; Path=/; HttpOnly`;
	}
	return response;
};
var user_hooks = /* @__PURE__ */ Object.freeze({
	__proto__: null,
	[Symbol.toStringTag]: 'Module',
	handle
});
const template = ({ head, body }) =>
	'<!DOCTYPE html>\n<html lang="en">\n	<head>\n		<meta charset="utf-8" />\n		<link rel="icon" href="/favicon.ico" />\n		<meta name="viewport" content="width=device-width, initial-scale=1" />\n\n		' +
	head +
	'\n	</head>\n\n	<body>\n		<div id="svelte">' +
	body +
	'</div>\n	</body>\n</html>\n';
let options = null;
function init(settings) {
	set_paths(settings.paths);
	set_prerendering(settings.prerendering || false);
	options = {
		amp: false,
		dev: false,
		entry: {
			file: '/./_app/start-5f2b5a31.js',
			css: ['/./_app/assets/start-25a78b07.css', '/./_app/assets/vendor-c5979ca8.css'],
			js: [
				'/./_app/start-5f2b5a31.js',
				'/./_app/chunks/vendor-112f5557.js',
				'/./_app/chunks/preload-helper-9f12a5fd.js'
			]
		},
		fetched: void 0,
		floc: false,
		get_component_path: (id) => '/./_app/' + entry_lookup[id],
		get_stack: (error2) => String(error2),
		handle_error: (error2) => {
			console.error(error2.stack);
			error2.stack = options.get_stack(error2);
		},
		hooks: get_hooks(user_hooks),
		hydrate: true,
		initiator: void 0,
		load_component,
		manifest,
		paths: settings.paths,
		read: settings.read,
		root: Root,
		router: true,
		ssr: true,
		target: '#svelte',
		template
	};
}
const empty = () => ({});
const manifest = {
	assets: [
		{ file: 'NahNahNah.jpeg', size: 16991, type: 'image/jpeg' },
		{ file: 'favicon.ico', size: 1150, type: 'image/vnd.microsoft.icon' },
		{ file: 'headshot.jpg', size: 9444311, type: 'image/jpeg' },
		{ file: 'headshot1.jpg', size: 9081575, type: 'image/jpeg' },
		{ file: 'prism.css', size: 2091, type: 'text/css' },
		{ file: 'robots.txt', size: 67, type: 'text/plain' },
		{ file: 'test.jpg', size: 15483160, type: 'image/jpeg' }
	],
	layout: 'src/routes/$layout.svelte',
	error: '.svelte-kit/build/components/error.svelte',
	routes: [
		{
			type: 'page',
			pattern: /^\/$/,
			params: empty,
			a: ['src/routes/$layout.svelte', 'src/routes/index.svelte'],
			b: ['.svelte-kit/build/components/error.svelte']
		},
		{
			type: 'endpoint',
			pattern: /^\/articles\.json$/,
			params: empty,
			load: () =>
				Promise.resolve().then(function () {
					return index_json;
				})
		},
		{
			type: 'page',
			pattern: /^\/articles\/?$/,
			params: empty,
			a: [
				'src/routes/$layout.svelte',
				'src/routes/articles/$layout.svelte',
				'src/routes/articles/index.svelte'
			],
			b: ['.svelte-kit/build/components/error.svelte']
		},
		{
			type: 'page',
			pattern: /^\/articles\/read\/adding-vite-imagetools-to-sveltekit\/?$/,
			params: empty,
			a: [
				'src/routes/$layout.svelte',
				'src/routes/articles/$layout.svelte',
				'src/routes/articles/read/$layout.svelte',
				'src/routes/articles/read/adding-vite-imagetools-to-sveltekit.svx'
			],
			b: ['.svelte-kit/build/components/error.svelte']
		},
		{
			type: 'page',
			pattern: /^\/about\/?$/,
			params: empty,
			a: ['src/routes/$layout.svelte', 'src/routes/about.svelte'],
			b: ['.svelte-kit/build/components/error.svelte']
		},
		{
			type: 'endpoint',
			pattern: /^\/api\/github\/commits\.json$/,
			params: empty,
			load: () =>
				Promise.resolve().then(function () {
					return commits_json;
				})
		}
	]
};
const get_hooks = (hooks) => ({
	getSession: hooks.getSession || (() => ({})),
	handle: hooks.handle || (({ request, render: render2 }) => render2(request))
});
const module_lookup = {
	'src/routes/$layout.svelte': () =>
		Promise.resolve().then(function () {
			return $layout$5;
		}),
	'.svelte-kit/build/components/error.svelte': () =>
		Promise.resolve().then(function () {
			return error;
		}),
	'src/routes/index.svelte': () =>
		Promise.resolve().then(function () {
			return index$1;
		}),
	'src/routes/articles/$layout.svelte': () =>
		Promise.resolve().then(function () {
			return $layout$3;
		}),
	'src/routes/articles/index.svelte': () =>
		Promise.resolve().then(function () {
			return index;
		}),
	'src/routes/articles/read/$layout.svelte': () =>
		Promise.resolve().then(function () {
			return $layout$1;
		}),
	'src/routes/articles/read/adding-vite-imagetools-to-sveltekit.svx': () =>
		Promise.resolve().then(function () {
			return addingViteImagetoolsToSveltekit;
		}),
	'src/routes/about.svelte': () =>
		Promise.resolve().then(function () {
			return about;
		})
};
const metadata_lookup = {
	'src/routes/$layout.svelte': {
		entry: '/./_app/pages/$layout.svelte-ad82bdbb.js',
		css: ['/./_app/assets/pages/$layout.svelte-af9e3b5d.css', '/./_app/assets/vendor-c5979ca8.css'],
		js: [
			'/./_app/pages/$layout.svelte-ad82bdbb.js',
			'/./_app/chunks/preload-helper-9f12a5fd.js',
			'/./_app/chunks/vendor-112f5557.js'
		],
		styles: null
	},
	'.svelte-kit/build/components/error.svelte': {
		entry: '/./_app/error.svelte-e8bcd22f.js',
		css: ['/./_app/assets/vendor-c5979ca8.css'],
		js: ['/./_app/error.svelte-e8bcd22f.js', '/./_app/chunks/vendor-112f5557.js'],
		styles: null
	},
	'src/routes/index.svelte': {
		entry: '/./_app/pages/index.svelte-42c85b22.js',
		css: [
			'/./_app/assets/pages/index.svelte-f6733d84.css',
			'/./_app/assets/vendor-c5979ca8.css',
			'/./_app/assets/test-d7099871.css'
		],
		js: [
			'/./_app/pages/index.svelte-42c85b22.js',
			'/./_app/chunks/vendor-112f5557.js',
			'/./_app/chunks/test-7f96a728.js'
		],
		styles: null
	},
	'src/routes/articles/$layout.svelte': {
		entry: '/./_app/pages/articles/$layout.svelte-25574478.js',
		css: [
			'/./_app/assets/pages/articles/$layout.svelte-305a5ad1.css',
			'/./_app/assets/vendor-c5979ca8.css'
		],
		js: ['/./_app/pages/articles/$layout.svelte-25574478.js', '/./_app/chunks/vendor-112f5557.js'],
		styles: null
	},
	'src/routes/articles/index.svelte': {
		entry: '/./_app/pages/articles/index.svelte-e7a84173.js',
		css: ['/./_app/assets/vendor-c5979ca8.css'],
		js: ['/./_app/pages/articles/index.svelte-e7a84173.js', '/./_app/chunks/vendor-112f5557.js'],
		styles: null
	},
	'src/routes/articles/read/$layout.svelte': {
		entry: '/./_app/pages/articles/read/$layout.svelte-8f090e86.js',
		css: [
			'/./_app/assets/pages/articles/read/$layout.svelte-d4d89311.css',
			'/./_app/assets/vendor-c5979ca8.css'
		],
		js: [
			'/./_app/pages/articles/read/$layout.svelte-8f090e86.js',
			'/./_app/chunks/vendor-112f5557.js'
		],
		styles: null
	},
	'src/routes/articles/read/adding-vite-imagetools-to-sveltekit.svx': {
		entry: '/./_app/pages/articles/read/adding-vite-imagetools-to-sveltekit.svx-2c291b3e.js',
		css: ['/./_app/assets/vendor-c5979ca8.css', '/./_app/assets/test-d7099871.css'],
		js: [
			'/./_app/pages/articles/read/adding-vite-imagetools-to-sveltekit.svx-2c291b3e.js',
			'/./_app/chunks/vendor-112f5557.js',
			'/./_app/chunks/test-7f96a728.js'
		],
		styles: null
	},
	'src/routes/about.svelte': {
		entry: '/./_app/pages/about.svelte-4c6e4bd6.js',
		css: ['/./_app/assets/vendor-c5979ca8.css'],
		js: ['/./_app/pages/about.svelte-4c6e4bd6.js', '/./_app/chunks/vendor-112f5557.js'],
		styles: null
	}
};
async function load_component(file) {
	return {
		module: await module_lookup[file](),
		...metadata_lookup[file]
	};
}
init({ paths: { base: '', assets: '/.' } });
function render(request, { prerender } = {}) {
	const host = request.headers['host'];
	return respond({ ...request, host }, options, { prerender });
}
const posts = [
	{
		title: 'Integrating vite-imagetools and SvelteKit',
		slug: 'adding-vite-imagetools-to-sveltekit',
		description: '',
		tags: ['vite', 'sveltekit', 'svelte', 'sharp', 'image-transformations', 'vite-imagetools'],
		date: '2021-03-26'
	},
	{
		title: 'How to use only one certificate with certbot and nginx',
		slug: 'how-to-use-only-one-certificate-with-certbot-and-nginx',
		description: '',
		tags: ['nginx', 'certbot', 'aws', 'continuous integration'],
		date: '2020-07-23'
	},
	{
		title: 'How to use only one certificate with certbot and nginx',
		slug: 'how-to-use-only-one-certificate-with-certbot-and-nginx',
		description: '',
		tags: ['nginx', 'certbot', 'aws', 'continuous integration'],
		date: '2020-07-23'
	},
	{
		title: 'How to use only one certificate with certbot and nginx',
		slug: 'how-to-use-only-one-certificate-with-certbot-and-nginx',
		description: '',
		tags: ['nginx', 'certbot', 'aws', 'continuous integration'],
		date: '2020-07-23'
	},
	{
		title: 'How to use only one certificate with certbot and nginx',
		slug: 'how-to-use-only-one-certificate-with-certbot-and-nginx',
		description: '',
		tags: ['nginx', 'certbot', 'aws', 'continuous integration'],
		date: '2020-07-23'
	},
	{
		title: 'How to use only one certificate with certbot and nginx',
		slug: 'how-to-use-only-one-certificate-with-certbot-and-nginx',
		description: '',
		tags: ['nginx', 'certbot', 'aws', 'continuous integration'],
		date: '2020-07-23'
	},
	{
		title: 'How to use only one certificate with certbot and nginx',
		slug: 'how-to-use-only-one-certificate-with-certbot-and-nginx',
		description: '',
		tags: ['nginx', 'certbot', 'aws', 'continuous integration'],
		date: '2020-07-23'
	},
	{
		title: 'How to use only one certificate with certbot and nginx',
		slug: 'how-to-use-only-one-certificate-with-certbot-and-nginx',
		description: '',
		tags: ['nginx', 'certbot', 'aws', 'continuous integration'],
		date: '2020-07-23'
	},
	{
		title: 'How to use only one certificate with certbot and nginx',
		slug: 'how-to-use-only-one-certificate-with-certbot-and-nginx',
		description: '',
		tags: ['nginx', 'certbot', 'aws', 'continuous integration'],
		date: '2020-07-23'
	},
	{
		title: 'How to use only one certificate with certbot and nginx',
		slug: 'how-to-use-only-one-certificate-with-certbot-and-nginx',
		description: '',
		tags: ['nginx', 'certbot', 'aws', 'continuous integration'],
		date: '2020-07-23'
	},
	{
		title: 'How to use only one certificate with certbot and nginx',
		slug: 'how-to-use-only-one-certificate-with-certbot-and-nginx',
		description: '',
		tags: ['nginx', 'certbot', 'aws', 'continuous integration'],
		date: '2020-07-23'
	},
	{
		title: 'How to use only one certificate with certbot and nginx',
		slug: 'how-to-use-only-one-certificate-with-certbot-and-nginx',
		description: '',
		tags: ['nginx', 'certbot', 'aws', 'continuous integration'],
		date: '2020-07-23'
	},
	{
		title: 'How to use only one certificate with certbot and nginx',
		slug: 'how-to-use-only-one-certificate-with-certbot-and-nginx',
		description: '',
		tags: ['nginx', 'certbot', 'aws', 'continuous integration'],
		date: '2020-07-23'
	},
	{
		title: 'How to use only one certificate with certbot and nginx',
		slug: 'how-to-use-only-one-certificate-with-certbot-and-nginx',
		description: '',
		tags: ['nginx', 'certbot', 'aws', 'continuous integration'],
		date: '2020-07-23'
	},
	{
		title: 'How to use only one certificate with certbot and nginx',
		slug: 'how-to-use-only-one-certificate-with-certbot-and-nginx',
		description: '',
		tags: ['nginx', 'certbot', 'aws', 'continuous integration'],
		date: '2020-07-23'
	},
	{
		title: 'How to use only one certificate with certbot and nginx',
		slug: 'how-to-use-only-one-certificate-with-certbot-and-nginx',
		description: '',
		tags: ['nginx', 'certbot', 'aws', 'continuous integration'],
		date: '2020-07-23'
	}
];
const articles = JSON.stringify(
	posts.map((post) => {
		return {
			title: post.title,
			slug: post.slug
		};
	})
);
async function get$1() {
	return {
		body: {
			articles
		}
	};
}
var index_json = /* @__PURE__ */ Object.freeze({
	__proto__: null,
	[Symbol.toStringTag]: 'Module',
	get: get$1
});
const octokit = new Octokit({
	auth: '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',
	userAgent: 'activity-monitor v1.2.3',
	timeZone: 'America/Chicago',
	baseUrl: 'https://api.github.com',
	log: {
		debug: () => {},
		info: () => {},
		warn: console.warn,
		error: console.error
	},
	request: {
		agent: void 0,
		fetch: void 0,
		timeout: 0
	}
});
const Schema = mongoose.Schema;
const Commit = mongoose.model(
	'Commit',
	new Schema({
		_id: { type: String },
		author: {
			email: { type: String, require: true },
			name: { type: String, require: true }
		},
		message: { type: String, require: true },
		distinct: { type: Boolean, require: true },
		repo: { type: Number, ref: 'Repo', index: true }
	})
);
const Repo = mongoose.model(
	'Repo',
	new Schema({
		_id: { type: Number },
		name: { type: String, require: true, index: true },
		url: { type: String, require: true }
	})
);
const addRepo = async (repo) => {
	let result = await Repo.findById(repo.id);
	if (result == null) {
		let newRepo = new Repo({
			_id: repo.id,
			name: repo.name,
			url: repo.url
		});
		return newRepo.save().catch(function (err) {
			console.error(err);
		});
	} else {
		return result;
	}
};
const addCommit = async (commit) => {
	let result = await Commit.findById(commit.sha);
	if (result == null) {
		let newCommit = new Commit({
			_id: commit.sha,
			author: {
				email: commit.author.email,
				name: commit.author.name
			},
			message: commit.message,
			distinct: commit.distinct,
			repo: commit.repoId,
			date: commit.date
		});
		return newCommit.save().catch(function (err) {
			console.error(err);
		});
	} else {
		return result;
	}
};
async function get() {
	const { data } = await octokit.request('GET /users/{username}/events', {
		username: 'cryptodeal',
		per_page: 100
	});
	const parsedData = data
		.filter((action) => action.type === 'PushEvent')
		.map((pushEvent) => {
			return {
				...pushEvent,
				commits: pushEvent.payload.commits.filter(
					(commits2) => commits2.author.email === 'jimmydeal16@gmail.com'
				)
			};
		});
	let repos = [...new Set(parsedData.map((item) => JSON.stringify(item.repo)))];
	repos.forEach((repo) => {
		addRepo(JSON.parse(repo));
	});
	let commits = [
		...new Set(
			parsedData.map((item) =>
				item.commits.map((commit) =>
					JSON.stringify({
						...commit,
						repoId: item.repo.id,
						date: item.created_at
					})
				)
			)
		)
	].flat();
	commits.forEach((commit) => {
		addCommit(JSON.parse(commit));
	});
	if (data && parsedData) {
		return {
			body: {
				parsedData
			}
		};
	}
}
var commits_json = /* @__PURE__ */ Object.freeze({
	__proto__: null,
	[Symbol.toStringTag]: 'Module',
	get
});
const getStores = () => {
	const stores = getContext('__svelte__');
	return {
		page: {
			subscribe: stores.page.subscribe
		},
		navigating: {
			subscribe: stores.navigating.subscribe
		},
		get preloading() {
			console.error('stores.preloading is deprecated; use stores.navigating instead');
			return {
				subscribe: stores.navigating.subscribe
			};
		},
		session: stores.session
	};
};
const page = {
	subscribe(fn) {
		const store = getStores().page;
		return store.subscribe(fn);
	}
};
var app =
	"#tsparticles {\n  height: 100%;\n  width: 100%;\n}\nhtml {\n  --tw-bg-opacity: 1;\n  background-color: rgba(255, 251, 235, var(--tw-bg-opacity));\n}\nhtml.dark {\n  --tw-bg-opacity: 1;\n  background-color: rgba(17, 24, 39, var(--tw-bg-opacity));\n}\n*:focus:not(.focus-visible) {\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n[aria-current] {\n  position: relative;\n  display: inline-block;\n}\n[aria-current]::after {\n  position: absolute;\n  content: '';\n  width: calc(100% - 1em);\n  height: 2px;\n  background-color: #991b1b;\n  display: block;\n  bottom: -1px;\n}\n.dark [aria-current]::after {\n  position: absolute;\n  content: '';\n  width: calc(100% - 1em);\n  height: 2px;\n  background-color: #34d399;\n  display: block;\n  bottom: -1px;\n}";
var windi = `/* windicss layer base */
*, ::before, ::after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border-width: 0;
  border-style: solid;
  border-color: #e5e7eb;
}
* {
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
}
:root {
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
}
:-moz-focusring {
  outline: 1px dotted ButtonText;
}
:-moz-ui-invalid {
  box-shadow: none;
}
::moz-focus-inner {
  border-style: none;
  padding: 0;
}
::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
  height: auto;
}
::-webkit-search-decoration {
  -webkit-appearance: none;
}
::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}
[type='search'] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}
abbr[title] {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}
body {
  margin: 0;
  font-family: inherit;
  line-height: inherit;
}
html {
  -webkit-text-size-adjust: 100%;
  font-family: ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
  line-height: 1.5;
}
a {
  color: inherit;
  text-decoration: inherit;
}
b, strong {
  font-weight: bolder;
}
button, input, optgroup, select, textarea {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  padding: 0;
  line-height: inherit;
  color: inherit;
}
button, select {
  text-transform: none;
}
button, [type='button'], [type='reset'], [type='submit'] {
  -webkit-appearance: button;
}
blockquote, dl, dd, h1, h2, h3, h4, h5, h6, hr, figure, p, pre {
  margin: 0;
}
button {
  background-color: transparent;
  background-image: none;
}
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}
button, [role="button"] {
  cursor: pointer;
}
code, kbd, samp, pre {
  font-size: 1em;
}
fieldset {
  margin: 0;
  padding: 0;
}
hr {
  height: 0;
  color: inherit;
  border-top-width: 1px;
}
h1, h2, h3, h4, h5, h6 {
  font-size: inherit;
  font-weight: inherit;
}
img {
  border-style: solid;
}
input::placeholder {
  opacity: 1;
  color: #9ca3af;
}
input::webkit-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}
input::-moz-placeholder {
  opacity: 1;
  color: #9ca3af;
}
input:-ms-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}
input::-ms-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}
img, svg, video, canvas, audio, iframe, embed, object {
  display: block;
  vertical-align: middle;
}
img, video {
  max-width: 100%;
  height: auto;
}
legend {
  padding: 0;
}
ol, ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
progress {
  vertical-align: baseline;
}
pre, code, kbd, samp {
  font-family: ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;
}
small {
  font-size: 80%;
}
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
summary {
  display: list-item;
}
table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}
textarea {
  resize: vertical;
}
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}
textarea::webkit-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}
textarea::-moz-placeholder {
  opacity: 1;
  color: #9ca3af;
}
textarea:-ms-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}
textarea::-ms-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}
/* windicss layer components */

/* windicss layer utilities */
.container {
  width: 100%;
}
.bg-red-800 {
  --tw-bg-opacity: 1;
  background-color: rgba(153, 27, 27, var(--tw-bg-opacity));
}
.bg-blue-300 {
  --tw-bg-opacity: 1;
  background-color: rgba(147, 197, 253, var(--tw-bg-opacity));
}
.dark .dark\\:bg-green-300 {
  --tw-bg-opacity: 1;
  background-color: rgba(110, 231, 183, var(--tw-bg-opacity));
}
.dark .dark\\:bg-purple-900 {
  --tw-bg-opacity: 1;
  background-color: rgba(76, 29, 149, var(--tw-bg-opacity));
}
.bg-opacity-80 {
  --tw-bg-opacity: 0.8;
}
.dark .dark\\:bg-opacity-30 {
  --tw-bg-opacity: 0.3;
}
.border-yellow-50 {
  --tw-border-opacity: 1;
  border-color: rgba(255, 251, 235, var(--tw-border-opacity));
}
.dark .dark\\:border-gray-900 {
  --tw-border-opacity: 1;
  border-color: rgba(17, 24, 39, var(--tw-border-opacity));
}
.rounded-full {
  border-radius: 9999px;
}
.rounded-lg {
  border-radius: 0.5rem;
}
.border-b {
  border-bottom-width: 1px;
}
.cursor-pointer {
  cursor: pointer;
}
.block {
  display: block;
}
.inline-block {
  display: inline-block;
}
.flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}
.grid {
  display: -ms-grid;
  display: grid;
}
.flex-col {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  -webkit-flex-direction: column;
  flex-direction: column;
}
.flex-wrap {
  -ms-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
}
.flex-wrap-reverse {
  -ms-flex-wrap: wrap-reverse;
  -webkit-flex-wrap: wrap-reverse;
  flex-wrap: wrap-reverse;
}
.items-center {
  -webkit-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  align-items: center;
}
.justify-center {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}
.justify-between {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
}
.float-left {
  float: left;
}
.font-extralight {
  font-weight: 200;
}
.font-light {
  font-weight: 300;
}
.h-40 {
  height: 10rem;
}
.h-full {
  height: 100%;
}
.h-98 {
  height: 24.5rem;
}
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}
.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}
.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.text-7xl {
  font-size: 4.5rem;
  line-height: 1;
}
.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}
.list-inside {
  list-style-position: inside;
}
.list-disc {
  list-style-type: disc;
}
.m-0 {
  margin: 0px;
}
.m-5 {
  margin: 1.25rem;
}
.my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}
.my-5 {
  margin-top: 1.25rem;
  margin-bottom: 1.25rem;
}
.mx-1 {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
}
.mx-10 {
  margin-left: 2.5rem;
  margin-right: 2.5rem;
}
.mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.mb-15 {
  margin-bottom: 3.75rem;
}
.mb-40 {
  margin-bottom: 10rem;
}
.mb-3 {
  margin-bottom: 0.75rem;
}
.overflow-hidden {
  overflow: hidden;
}
.p-0 {
  padding: 0px;
}
.p-10 {
  padding: 2.5rem;
}
.p-5 {
  padding: 1.25rem;
}
.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}
.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}
.py-5 {
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}
.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}
.px {
  padding-left: 1px;
  padding-right: 1px;
}
.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.static {
  position: static;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.hover\\:shadow-animate:hover {
  --tw-shadow: 0.5px 0.5px rgba(255,255,255,1), 1.5px 1.5px rgba(255,255,255,1), 2.5px 2.5px rgba(255,255,255,1), 3.5px 3.5px rgba(255,255,255,1), 4.5px 4.5px rgba(255,255,255,1);
  -webkit-box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.text-left {
  text-align: left;
}
.text-center {
  text-align: center;
}
.text-gray-800 {
  --tw-text-opacity: 1;
  color: rgba(31, 41, 55, var(--tw-text-opacity));
}
.text-gray-900 {
  --tw-text-opacity: 1;
  color: rgba(17, 24, 39, var(--tw-text-opacity));
}
.text-white {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.text-red-800 {
  --tw-text-opacity: 1;
  color: rgba(153, 27, 27, var(--tw-text-opacity));
}
.dark .dark\\:text-gray-200 {
  --tw-text-opacity: 1;
  color: rgba(229, 231, 235, var(--tw-text-opacity));
}
.dark .dark\\:text-gray-900 {
  --tw-text-opacity: 1;
  color: rgba(17, 24, 39, var(--tw-text-opacity));
}
.dark .dark\\:text-green-400 {
  --tw-text-opacity: 1;
  color: rgba(52, 211, 153, var(--tw-text-opacity));
}
.dark .dark\\:hover\\:text-green-600:hover {
  --tw-text-opacity: 1;
  color: rgba(5, 150, 105, var(--tw-text-opacity));
}
.uppercase {
  text-transform: uppercase;
}
.no-underline {
  text-decoration: none;
}
.break-words {
  overflow-wrap: break-word;
}
.w-3\\/4 {
  width: 75%;
}
.w-1\\/2 {
  width: 50%;
}
.w-full {
  width: 100%;
}
.w-98 {
  width: 24.5rem;
}
.gap-2 {
  grid-gap: 0.5rem;
  gap: 0.5rem;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.auto-rows-min {
  grid-auto-rows: -webkit-min-content;
  grid-auto-rows: min-content;
}
.hover\\:transform-gpu:hover {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  -webkit-transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  -ms-transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.hover\\:-translate-x-1:hover {
  --tw-translate-x: -0.25rem;
}
.hover\\:-translate-y-1:hover {
  --tw-translate-y: -0.25rem;
}
.hover\\:transition:hover {
  -webkit-transition-property: background-color, border-color, color, fill, stroke, opacity, -webkit-box-shadow, -webkit-transform;
  -o-transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, -webkit-box-shadow, transform, -webkit-transform;
  -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  -webkit-transition-duration: 150ms;
  -o-transition-duration: 150ms;
  transition-duration: 150ms;
}
.hover\\:ease-in-out:hover {
  -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.hover\\:duration-300:hover {
  -webkit-transition-duration: 300ms;
  -o-transition-duration: 300ms;
  transition-duration: 300ms;
}
@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
  .sm\\:h-20 {
    height: 5rem;
  }
  .sm\\:text-5xl {
    font-size: 3rem;
    line-height: 1;
  }
  .sm\\:text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }
  .sm\\:w-1\\/2 {
    width: 50%;
  }
}
@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
  .md\\:justify-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    -webkit-justify-content: flex-end;
    justify-content: flex-end;
  }
  .md\\:mx-20 {
    margin-left: 5rem;
    margin-right: 5rem;
  }
  .md\\:text-left {
    text-align: left;
  }
  .md\\:w-3\\/4 {
    width: 75%;
  }
  .md\\:gap-4 {
    grid-gap: 1rem;
    gap: 1rem;
  }
  .md\\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}
@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
  .lg\\:mx-30 {
    margin-left: 7.5rem;
    margin-right: 7.5rem;
  }
  .lg\\:p-8 {
    padding: 2rem;
  }
  .lg\\:px-15 {
    padding-left: 3.75rem;
    padding-right: 3.75rem;
  }
  .lg\\:w-4\\/9 {
    width: 44.444444%;
  }
}
@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
  .xl\\:mx-40 {
    margin-left: 10rem;
    margin-right: 10rem;
  }
}
@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
  .\\32 xl\\:mx-60 {
    margin-left: 15rem;
    margin-right: 15rem;
  }
}`;
const ToggleCore = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let label;
	let button;
	let $$restProps = compute_rest_props($$props, ['id', 'toggled', 'disabled']);
	let { id = 'toggle' + Math.random().toString(36) } = $$props;
	let { toggled = true } = $$props;
	let { disabled = false } = $$props;
	if ($$props.id === void 0 && $$bindings.id && id !== void 0) $$bindings.id(id);
	if ($$props.toggled === void 0 && $$bindings.toggled && toggled !== void 0)
		$$bindings.toggled(toggled);
	if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
		$$bindings.disabled(disabled);
	label = { for: id };
	button = {
		...$$restProps,
		id,
		disabled,
		'aria-checked': toggled,
		type: 'button',
		role: 'switch'
	};
	return `${slots.default ? slots.default({ label, button }) : ``}`;
});
var Toggle_svelte_svelte_type_style_lang =
	'label.svelte-z8fsdj{display:block;margin-bottom:0.25rem;font-size:0.75rem}.hideLabel.svelte-z8fsdj{position:absolute;height:1px;width:1px;overflow:hidden;clip:rect(1px 1px 1px 1px);clip:rect(1px, 1px, 1px, 1px);white-space:nowrap}button.svelte-z8fsdj{position:relative;padding:0 0.25rem;border:0;border-radius:1rem;height:1.25rem;width:2.5rem;font:inherit;color:inherit;line-height:inherit}button.svelte-z8fsdj:not([disabled]){cursor:pointer}button[disabled].svelte-z8fsdj{cursor:not-allowed;opacity:0.6}button.svelte-z8fsdj:before{position:absolute;content:"";top:0;bottom:0;left:0.125rem;margin:auto;height:1rem;width:1rem;text-align:center;border-radius:50%;background-color:currentColor;transition:transform 150ms ease-out}button[aria-checked="true"].svelte-z8fsdj:before{transform:translateX(1.25rem)}button.small.svelte-z8fsdj{height:1rem;width:1.75rem}button.small.svelte-z8fsdj:before{height:0.75rem;width:0.75rem}button.small[aria-checked="true"].svelte-z8fsdj:before{transform:translateX(0.75rem)}div.svelte-z8fsdj{display:flex;align-items:center}span.svelte-z8fsdj{margin-left:0.5rem}';
const css$8 = {
	code:
		'label.svelte-z8fsdj{display:block;margin-bottom:0.25rem;font-size:0.75rem}.hideLabel.svelte-z8fsdj{position:absolute;height:1px;width:1px;overflow:hidden;clip:rect(1px 1px 1px 1px);clip:rect(1px, 1px, 1px, 1px);white-space:nowrap}button.svelte-z8fsdj{position:relative;padding:0 0.25rem;border:0;border-radius:1rem;height:1.25rem;width:2.5rem;font:inherit;color:inherit;line-height:inherit}button.svelte-z8fsdj:not([disabled]){cursor:pointer}button[disabled].svelte-z8fsdj{cursor:not-allowed;opacity:0.6}button.svelte-z8fsdj:before{position:absolute;content:"";top:0;bottom:0;left:0.125rem;margin:auto;height:1rem;width:1rem;text-align:center;border-radius:50%;background-color:currentColor;transition:transform 150ms ease-out}button[aria-checked="true"].svelte-z8fsdj:before{transform:translateX(1.25rem)}button.small.svelte-z8fsdj{height:1rem;width:1.75rem}button.small.svelte-z8fsdj:before{height:0.75rem;width:0.75rem}button.small[aria-checked="true"].svelte-z8fsdj:before{transform:translateX(0.75rem)}div.svelte-z8fsdj{display:flex;align-items:center}span.svelte-z8fsdj{margin-left:0.5rem}',
	map:
		'{"version":3,"file":"Toggle.svelte","sources":["Toggle.svelte"],"sourcesContent":["<script>\\n  /**\\n   * @slot {{ toggled: boolean; }}\\n   */\\n\\n  export let label = \\"Label\\";\\n  export let hideLabel = false;\\n  export let small = false;\\n  export let toggled = true;\\n  export let disabled = false;\\n\\n  /**\\n   * Set a descriptor for the toggled state\\n   * @type {string}\\n   */\\n  export let on = undefined;\\n\\n  /**\\n   * Set a descriptor for the untoggled state\\n   * @type {string}\\n   */\\n  export let off = undefined;\\n  export let switchColor = \\"#fff\\";\\n  export let toggledColor = \\"#0f62fe\\";\\n  export let untoggledColor = \\"#8d8d8d\\";\\n\\n  import { createEventDispatcher } from \\"svelte\\";\\n  import ToggleCore from \\"./ToggleCore.svelte\\";\\n\\n  const dispatch = createEventDispatcher();\\n\\n  /**\\n   * @event {boolean} toggle\\n   */\\n  $: dispatch(\\"toggle\\", toggled);\\n</script>\\n\\n<style>label {\\n  display: block;\\n  margin-bottom: 0.25rem;\\n  font-size: 0.75rem;\\n}\\n.hideLabel {\\n  position: absolute;\\n  height: 1px;\\n  width: 1px;\\n  overflow: hidden;\\n  clip: rect(1px 1px 1px 1px);\\n  clip: rect(1px, 1px, 1px, 1px);\\n  white-space: nowrap;\\n}\\nbutton {\\n  position: relative;\\n  padding: 0 0.25rem;\\n  border: 0;\\n  border-radius: 1rem;\\n  height: 1.25rem;\\n  width: 2.5rem;\\n  font: inherit;\\n  color: inherit;\\n  line-height: inherit;\\n}\\nbutton:not([disabled]) {\\n  cursor: pointer;\\n}\\nbutton[disabled] {\\n  cursor: not-allowed;\\n  opacity: 0.6;\\n}\\nbutton:before {\\n  position: absolute;\\n  content: \\"\\";\\n  top: 0;\\n  bottom: 0;\\n  left: 0.125rem;\\n  margin: auto;\\n  height: 1rem;\\n  width: 1rem;\\n  text-align: center;\\n  border-radius: 50%;\\n  background-color: currentColor;\\n  transition: transform 150ms ease-out;\\n}\\nbutton[aria-checked=\\"true\\"]:before {\\n  transform: translateX(1.25rem);\\n}\\nbutton.small {\\n  height: 1rem;\\n  width: 1.75rem;\\n}\\nbutton.small:before {\\n  height: 0.75rem;\\n  width: 0.75rem;\\n}\\nbutton.small[aria-checked=\\"true\\"]:before {\\n  transform: translateX(0.75rem);\\n}\\ndiv {\\n  display: flex;\\n  align-items: center;\\n}\\nspan {\\n  margin-left: 0.5rem;\\n}</style>\\n\\n<ToggleCore bind:toggled let:label={labelProps} let:button>\\n  <!-- svelte-ignore a11y-label-has-associated-control -->\\n  <label {...labelProps} class:hideLabel>{label}</label>\\n\\n  <div>\\n    <button\\n      class:small\\n      {...$$restProps}\\n      {...button}\\n      style=\\"color: {switchColor}; background-color: {toggled ? toggledColor : untoggledColor};\\n      {$$restProps.style}\\"\\n      {disabled}\\n      on:click\\n      on:click={() => (toggled = !toggled)}\\n      on:focus\\n      on:blur />\\n    <slot {toggled}>\\n      {#if on && off}<span>{toggled ? on : off}</span>{/if}\\n    </slot>\\n  </div>\\n</ToggleCore>\\n"],"names":[],"mappings":"AAqCO,KAAK,cAAC,CAAC,AACZ,OAAO,CAAE,KAAK,CACd,aAAa,CAAE,OAAO,CACtB,SAAS,CAAE,OAAO,AACpB,CAAC,AACD,UAAU,cAAC,CAAC,AACV,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,GAAG,CACV,QAAQ,CAAE,MAAM,CAChB,IAAI,CAAE,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAC3B,IAAI,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC9B,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,CAAC,CAAC,OAAO,CAClB,MAAM,CAAE,CAAC,CACT,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,OAAO,CACf,KAAK,CAAE,MAAM,CACb,IAAI,CAAE,OAAO,CACb,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,OAAO,AACtB,CAAC,AACD,oBAAM,KAAK,CAAC,QAAQ,CAAC,CAAC,AAAC,CAAC,AACtB,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,MAAM,CAAC,QAAQ,CAAC,cAAC,CAAC,AAChB,MAAM,CAAE,WAAW,CACnB,OAAO,CAAE,GAAG,AACd,CAAC,AACD,oBAAM,OAAO,AAAC,CAAC,AACb,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,EAAE,CACX,GAAG,CAAE,CAAC,CACN,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,QAAQ,CACd,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,MAAM,CAClB,aAAa,CAAE,GAAG,CAClB,gBAAgB,CAAE,YAAY,CAC9B,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,QAAQ,AACtC,CAAC,AACD,MAAM,CAAC,YAAY,CAAC,MAAM,eAAC,OAAO,AAAC,CAAC,AAClC,SAAS,CAAE,WAAW,OAAO,CAAC,AAChC,CAAC,AACD,MAAM,MAAM,cAAC,CAAC,AACZ,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,MAAM,oBAAM,OAAO,AAAC,CAAC,AACnB,MAAM,CAAE,OAAO,CACf,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,MAAM,MAAM,CAAC,YAAY,CAAC,MAAM,eAAC,OAAO,AAAC,CAAC,AACxC,SAAS,CAAE,WAAW,OAAO,CAAC,AAChC,CAAC,AACD,GAAG,cAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,IAAI,cAAC,CAAC,AACJ,WAAW,CAAE,MAAM,AACrB,CAAC"}'
};
create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let $$restProps = compute_rest_props($$props, [
		'label',
		'hideLabel',
		'small',
		'toggled',
		'disabled',
		'on',
		'off',
		'switchColor',
		'toggledColor',
		'untoggledColor'
	]);
	let { label = 'Label' } = $$props;
	let { hideLabel = false } = $$props;
	let { small = false } = $$props;
	let { toggled = true } = $$props;
	let { disabled = false } = $$props;
	let { on = void 0 } = $$props;
	let { off = void 0 } = $$props;
	let { switchColor = '#fff' } = $$props;
	let { toggledColor = '#0f62fe' } = $$props;
	let { untoggledColor = '#8d8d8d' } = $$props;
	const dispatch = createEventDispatcher();
	if ($$props.label === void 0 && $$bindings.label && label !== void 0) $$bindings.label(label);
	if ($$props.hideLabel === void 0 && $$bindings.hideLabel && hideLabel !== void 0)
		$$bindings.hideLabel(hideLabel);
	if ($$props.small === void 0 && $$bindings.small && small !== void 0) $$bindings.small(small);
	if ($$props.toggled === void 0 && $$bindings.toggled && toggled !== void 0)
		$$bindings.toggled(toggled);
	if ($$props.disabled === void 0 && $$bindings.disabled && disabled !== void 0)
		$$bindings.disabled(disabled);
	if ($$props.on === void 0 && $$bindings.on && on !== void 0) $$bindings.on(on);
	if ($$props.off === void 0 && $$bindings.off && off !== void 0) $$bindings.off(off);
	if ($$props.switchColor === void 0 && $$bindings.switchColor && switchColor !== void 0)
		$$bindings.switchColor(switchColor);
	if ($$props.toggledColor === void 0 && $$bindings.toggledColor && toggledColor !== void 0)
		$$bindings.toggledColor(toggledColor);
	if ($$props.untoggledColor === void 0 && $$bindings.untoggledColor && untoggledColor !== void 0)
		$$bindings.untoggledColor(untoggledColor);
	$$result.css.add(css$8);
	let $$settled;
	let $$rendered;
	do {
		$$settled = true;
		{
			dispatch('toggle', toggled);
		}
		$$rendered = `${validate_component(ToggleCore, 'ToggleCore').$$render(
			$$result,
			{ toggled },
			{
				toggled: ($$value) => {
					toggled = $$value;
					$$settled = false;
				}
			},
			{
				default: ({ label: labelProps, button }) => `
  <label${spread([labelProps], (hideLabel ? 'hideLabel' : '') + ' svelte-z8fsdj')}>${escape(
					label
				)}</label>

  <div class="${'svelte-z8fsdj'}"><button${spread(
					[
						$$restProps,
						button,
						{
							style:
								'color: ' +
								escape(switchColor) +
								'; background-color: ' +
								escape(toggled ? toggledColor : untoggledColor) +
								';\n      ' +
								escape($$restProps.style)
						},
						{ disabled: disabled || null }
					],
					(small ? 'small' : '') + ' svelte-z8fsdj'
				)}></button>
    ${
			slots.default
				? slots.default({ toggled })
				: `
      ${on && off ? `<span class="${'svelte-z8fsdj'}">${escape(toggled ? on : off)}</span>` : ``}
    `
		}</div>`
			}
		)}`;
	} while (!$$settled);
	return $$rendered;
});
const createLocalStore = (key) => {
	const { subscribe: subscribe2, set, update } = writable();
	return {
		subscribe: subscribe2,
		set,
		update,
		useLocalStorage: () => {
			const json = localStorage.getItem(key);
			if (json) {
				set(json);
			}
			subscribe2((current) => {
				localStorage.setItem(key, current);
			});
		}
	};
};
const theme = createLocalStore('theme');
var Nav_svelte_svelte_type_style_lang =
	":root {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\nul.svelte-4mj48z::after {\n  content: '';\n  vertical-align: center;\n  clear: both;\n}";
const css$7 = {
	code:
		":root{font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif}ul.svelte-4mj48z::after{content:'';vertical-align:center;clear:both}",
	map: `{"version":3,"file":"Nav.svelte","sources":["Nav.svelte"],"sourcesContent":["<script>\\n  export let segment\\n  import Toggle from \\"svelte-toggle\\";\\n  import { browser } from '$app/env';\\n  import { theme } from '$lib/stores/localStore'\\n  let toggled = null\\n  if (browser) toggled = localStorage.getItem('theme') === 'dark' ? true : false\\n  const saveTheme = (mode, toggled) => {\\n    theme.set(mode)\\n    // eslint-disable-next-line no-unused-vars\\n    toggled = !toggled\\n  }\\n  const toggle = () => {\\n    if ($theme === \\"dark\\") {\\n      document.documentElement.classList.remove('dark')\\n      saveTheme('light', toggled)\\n    } else {\\n      document.documentElement.classList.add('dark')\\n      saveTheme('dark', toggled)\\n    }\\n  }\\n</script>\\n<style>:root {\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\n}\\nul::after {\\n  content: '';\\n  vertical-align: center;\\n  clear: both;\\n}</style>\\n\\n<nav\\n  class=\\"border-b flex font-light bg-opacity-80 bg-blue-300 border-yellow-50 py-0 px-4 text-red-800 items-center justify-between dark:text-green-400 dark:bg-purple-900 dark:bg-opacity-30 dark:border-gray-900\\">\\n  <ul class='m-0 p-0'>\\n    <li class='block float-left'><a class='py-4 px-2 no-underline block'\\n        aria-current='{segment === \\"\\" ? \\"page\\" : undefined}' sveltekit:prefetch href='/'>home</a></li>\\n    <li class='block float-left'><a class='py-4 px-2 no-underline block'\\n        aria-current='{segment === \\"articles\\" ? \\"page\\" : undefined}' sveltekit:prefetch href='/articles'>articles</a>\\n    </li>\\n    <li class='block float-left'><a class='py-4 px-2 no-underline block'\\n        aria-current='{segment === \\"about\\" ? \\"page\\" : undefined}' sveltekit:prefetch href='/about'>about</a></li>\\n  </ul>\\n  <ul>\\n    {#if toggled !== null}\\n    <Toggle hideLabel label=\\"Toggle Theme\\" switchColor=\\"{toggled ? '#111827' : '#FFFBEB'}\\" toggledColor=\\"#34D399\\"\\n      untoggledColor=\\"#991B1B\\" on=\\"Dark\\" off=\\"Light\\" on:click={toggle} bind:toggled />\\n    {/if}\\n  </ul>\\n</nav>"],"names":[],"mappings":"AAsBO,KAAK,AAAC,CAAC,AACZ,WAAW,CAAE,aAAa,CAAC,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC,gBAAgB,CAAC,CAAC,UAAU,AAC1I,CAAC,AACD,gBAAE,OAAO,AAAC,CAAC,AACT,OAAO,CAAE,EAAE,CACX,cAAc,CAAE,MAAM,CACtB,KAAK,CAAE,IAAI,AACb,CAAC"}`
};
const Nav = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let $$unsubscribe_theme;
	$$unsubscribe_theme = subscribe(theme, (value) => value);
	let { segment } = $$props;
	if ($$props.segment === void 0 && $$bindings.segment && segment !== void 0)
		$$bindings.segment(segment);
	$$result.css.add(css$7);
	let $$settled;
	let $$rendered;
	do {
		$$settled = true;
		$$rendered = `<nav class="${'border-b flex font-light bg-opacity-80 bg-blue-300 border-yellow-50 py-0 px-4 text-red-800 items-center justify-between dark:text-green-400 dark:bg-purple-900 dark:bg-opacity-30 dark:border-gray-900 svelte-4mj48z'}"><ul class="${'m-0 p-0 svelte-4mj48z'}"><li class="${'block float-left svelte-4mj48z'}"><a class="${'py-4 px-2 no-underline block svelte-4mj48z'}"${add_attribute(
			'aria-current',
			segment === '' ? 'page' : void 0,
			0
		)} sveltekit:prefetch href="${'/'}">home</a></li>
    <li class="${'block float-left svelte-4mj48z'}"><a class="${'py-4 px-2 no-underline block svelte-4mj48z'}"${add_attribute(
			'aria-current',
			segment === 'articles' ? 'page' : void 0,
			0
		)} sveltekit:prefetch href="${'/articles'}">articles</a></li>
    <li class="${'block float-left svelte-4mj48z'}"><a class="${'py-4 px-2 no-underline block svelte-4mj48z'}"${add_attribute(
			'aria-current',
			segment === 'about' ? 'page' : void 0,
			0
		)} sveltekit:prefetch href="${'/about'}">about</a></li></ul>
  <ul class="${'svelte-4mj48z'}">${``}</ul></nav>`;
	} while (!$$settled);
	$$unsubscribe_theme();
	return $$rendered;
});
const Particles = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let particleConfig;
	let $theme, $$unsubscribe_theme;
	$$unsubscribe_theme = subscribe(theme, (value) => ($theme = value));
	let ParticlesComponent;
	onMount(async () => {
		const module = await import('svelte-particles');
		ParticlesComponent = module.default;
	});
	particleConfig = {
		fpsLimit: 60,
		particles: {
			color: {
				value: $theme === 'dark' ? '#FFF' : '#000'
			},
			links: {
				color: $theme === 'dark' ? '#FFF' : '#000',
				enable: true,
				distance: 50
			},
			move: {
				enable: true,
				speed: 1,
				outModes: { default: 'bounce' }
			},
			size: { value: 1 }
		}
	};
	$$unsubscribe_theme();
	return `${validate_component(
		ParticlesComponent || missing_component,
		'svelte:component'
	).$$render(
		$$result,
		{
			id: 'tsparticles',
			options: particleConfig
		},
		{},
		{}
	)}`;
});
const $layout$4 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let segment;
	let $page, $$unsubscribe_page;
	$$unsubscribe_page = subscribe(page, (value) => ($page = value));
	segment = $page.path.split('/')[1];
	$$unsubscribe_page();
	return `${
		(($$result.head += `<script data-svelte="svelte-5soyh6">(function () {
			if (typeof document === 'undefined') return; // SSR
			if (
				localStorage.theme === 'dark' ||
				(!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
			) {
				document.documentElement.classList.add('dark');
				localStorage.setItem('theme', 'dark');
			} else {
				document.documentElement.classList.remove('dark');
			}
		})();
	</script>`),
		'')
	}

<div class="${'flex bg-opacity-80 bg-blue-300 h-40 dark:bg-purple-900 dark:bg-opacity-30'}">${validate_component(
		Particles,
		'Particles'
	).$$render($$result, {}, {}, {})}</div>
${validate_component(Nav, 'Nav').$$render($$result, { segment }, {}, {})}
${slots.default ? slots.default({}) : ``}`;
});
var $layout$5 = /* @__PURE__ */ Object.freeze({
	__proto__: null,
	[Symbol.toStringTag]: 'Module',
	default: $layout$4
});
function load$2({ error: error2, status }) {
	return { props: { error: error2, status } };
}
const Error$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { status } = $$props;
	let { error: error2 } = $$props;
	if ($$props.status === void 0 && $$bindings.status && status !== void 0)
		$$bindings.status(status);
	if ($$props.error === void 0 && $$bindings.error && error2 !== void 0) $$bindings.error(error2);
	return `<h1>${escape(status)}</h1>

<p>${escape(error2.message)}</p>


${error2.stack ? `<pre>${escape(error2.stack)}</pre>` : ``}`;
});
var error = /* @__PURE__ */ Object.freeze({
	__proto__: null,
	[Symbol.toStringTag]: 'Module',
	default: Error$1,
	load: load$2
});
var Typewriter_svelte_svelte_type_style_lang =
	".typewriter-container.svelte-kih1vp>*:not(.typing):not(.finished-typing){display:none}.typewriter-container.svelte-kih1vp .finished-typing::after{content:none}.cursor.svelte-kih1vp .typing::after{content:'\u258C';display:inline-block;color:var(--cursor-color);animation:svelte-kih1vp-cursorFade 1.25s infinite}.delay.svelte-kih1vp{visibility:hidden}@keyframes svelte-kih1vp-cursorFade{0%,100%{opacity:1}50%{opacity:0}}";
const css$6 = {
	code:
		".typewriter-container.svelte-kih1vp>*:not(.typing):not(.finished-typing){display:none}.typewriter-container.svelte-kih1vp .finished-typing::after{content:none}.cursor.svelte-kih1vp .typing::after{content:'\u258C';display:inline-block;color:var(--cursor-color);animation:svelte-kih1vp-cursorFade 1.25s infinite}.delay.svelte-kih1vp{visibility:hidden}@keyframes svelte-kih1vp-cursorFade{0%,100%{opacity:1}50%{opacity:0}}",
	map: `{"version":3,"file":"Typewriter.svelte","sources":["Typewriter.svelte"],"sourcesContent":["<script>\\n\\timport { onMount, beforeUpdate, onDestroy, createEventDispatcher } from 'svelte'\\n\\timport { typewriter } from './core/modes'\\n\\n\\texport let interval = 30\\n\\texport let cascade = false\\n\\texport let loop = false\\n\\texport let loopRandom = false\\n\\texport let scramble = false\\n\\texport let cursor = true\\n  export let delay = 0\\n\\n  let isMounted = false\\n  let reinit = {}\\n\\n  $: options = { interval, cascade, loop, loopRandom, scramble, cursor, delay, dispatch }\\n\\n  const dispatch = createEventDispatcher()\\n\\n  beforeUpdate(() => (isMounted && (reinit = {})))\\n\\n  onMount(() => (isMounted = true))\\n</script>\\n\\n<style>.typewriter-container > :global(*:not(.typing):not(.finished-typing)) {\\n  display: none;\\n}\\n.typewriter-container :global(.finished-typing::after) {\\n  content: none;\\n}\\n.cursor :global(.typing::after) {\\n  content: '\u258C';\\n  display: inline-block;\\n  color: var(--cursor-color);\\n  animation: cursorFade 1.25s infinite;\\n}\\n.delay {\\n  visibility: hidden;\\n}\\n@keyframes cursorFade {\\n  0%, 100% {\\n    opacity: 1;\\n  }\\n  50% {\\n    opacity: 0;\\n  }\\n}</style>\\n\\n{#key reinit}\\n  <div\\n    use:typewriter={options}\\n    class=\\"typewriter-container\\"\\n    class:cursor\\n    class:delay={options.delay > 0}\\n    style=\\"--cursor-color: {typeof cursor === 'string' ? cursor : 'black'}\\"\\n  >\\n    <slot />\\n  </div>\\n{/key}\\n"],"names":[],"mappings":"AAwBO,mCAAqB,CAAW,oCAAoC,AAAE,CAAC,AAC5E,OAAO,CAAE,IAAI,AACf,CAAC,AACD,mCAAqB,CAAC,AAAQ,uBAAuB,AAAE,CAAC,AACtD,OAAO,CAAE,IAAI,AACf,CAAC,AACD,qBAAO,CAAC,AAAQ,cAAc,AAAE,CAAC,AAC/B,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,IAAI,cAAc,CAAC,CAC1B,SAAS,CAAE,wBAAU,CAAC,KAAK,CAAC,QAAQ,AACtC,CAAC,AACD,MAAM,cAAC,CAAC,AACN,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,WAAW,wBAAW,CAAC,AACrB,EAAE,CAAE,IAAI,AAAC,CAAC,AACR,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,GAAG,AAAC,CAAC,AACH,OAAO,CAAE,CAAC,AACZ,CAAC,AACH,CAAC"}`
};
const Typewriter = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let options2;
	let { interval = 30 } = $$props;
	let { cascade = false } = $$props;
	let { loop = false } = $$props;
	let { loopRandom = false } = $$props;
	let { scramble = false } = $$props;
	let { cursor = true } = $$props;
	let { delay = 0 } = $$props;
	let isMounted = false;
	const dispatch = createEventDispatcher();
	beforeUpdate(() => isMounted && {});
	onMount(() => (isMounted = true));
	if ($$props.interval === void 0 && $$bindings.interval && interval !== void 0)
		$$bindings.interval(interval);
	if ($$props.cascade === void 0 && $$bindings.cascade && cascade !== void 0)
		$$bindings.cascade(cascade);
	if ($$props.loop === void 0 && $$bindings.loop && loop !== void 0) $$bindings.loop(loop);
	if ($$props.loopRandom === void 0 && $$bindings.loopRandom && loopRandom !== void 0)
		$$bindings.loopRandom(loopRandom);
	if ($$props.scramble === void 0 && $$bindings.scramble && scramble !== void 0)
		$$bindings.scramble(scramble);
	if ($$props.cursor === void 0 && $$bindings.cursor && cursor !== void 0)
		$$bindings.cursor(cursor);
	if ($$props.delay === void 0 && $$bindings.delay && delay !== void 0) $$bindings.delay(delay);
	$$result.css.add(css$6);
	options2 = {
		interval,
		cascade,
		loop,
		loopRandom,
		scramble,
		cursor,
		delay,
		dispatch
	};
	return `<div class="${[
		'typewriter-container svelte-kih1vp',
		(cursor ? 'cursor' : '') + ' ' + (options2.delay > 0 ? 'delay' : '')
	]
		.join(' ')
		.trim()}" style="${
		'--cursor-color: ' + escape(typeof cursor === 'string' ? cursor : 'black')
	}">${slots.default ? slots.default({}) : ``}</div>`;
});
var LazySrcsetPerf_svelte_svelte_type_style_lang =
	'img.svelte-1gs6214.svelte-1gs6214 {\n  object-position: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  object-fit: contain;\n  will-change: opacity;\n  width: 100%;\n}\n.blur.svelte-1gs6214.svelte-1gs6214 {\n  transition: opacity 1000ms;\n}\n.placeholder.svelte-1gs6214.svelte-1gs6214 {\n  opacity: 1;\n  transition: opacity 1000ms ease-out;\n  transition-delay: 0.4s;\n}\n.main.svelte-1gs6214.svelte-1gs6214 {\n  opacity: 0;\n  transition: opacity 1000ms ease-out;\n  transition-delay: 0.4s;\n}\n.loaded.svelte-1gs6214 .placeholder.svelte-1gs6214 {\n  opacity: 0;\n  position: absolute;\n}\n.loaded.svelte-1gs6214 .main.svelte-1gs6214 {\n  opacity: 1;\n}';
const css$5 = {
	code:
		'img.svelte-1gs6214.svelte-1gs6214{object-position:center;position:absolute;top:0;left:0;object-fit:contain;will-change:opacity;width:100%}.blur.svelte-1gs6214.svelte-1gs6214{transition:opacity 1000ms}.placeholder.svelte-1gs6214.svelte-1gs6214{opacity:1;transition:opacity 1000ms ease-out;transition-delay:0.4s}.main.svelte-1gs6214.svelte-1gs6214{opacity:0;transition:opacity 1000ms ease-out;transition-delay:0.4s}.loaded.svelte-1gs6214 .placeholder.svelte-1gs6214{opacity:0;position:absolute}.loaded.svelte-1gs6214 .main.svelte-1gs6214{opacity:1}',
	map: `{"version":3,"file":"LazySrcsetPerf.svelte","sources":["LazySrcsetPerf.svelte"],"sourcesContent":["<script>\\n\\timport { onMount } from 'svelte';\\n\\tlet blur = true;\\n\\tlet observerCallback = function (entries, observer) {\\n\\t\\tentries.forEach((entry) => {\\n\\t\\t\\tif (entry.isIntersecting) {\\n\\t\\t\\t\\tintersected = true;\\n\\t\\t\\t\\tobserver.unobserve(imgElement);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t};\\n\\texport let style;\\n\\t/**\\n\\t * Image aspect ratio.\\n\\t * @type {string}\\n\\t */\\n\\texport let ratio;\\n\\t/**\\n\\t * WebP Image srcset.\\n\\t * @type {string}\\n\\t */\\n\\texport let srcsetWebP;\\n\\t/**\\n\\t * AVIF Image srcset.\\n\\t * @type {string}\\n\\t */\\n\\texport let srcsetAvif;\\n\\t/**\\n\\t * WebP Image srcset.\\n\\t * @type {string}\\n\\t */\\n\\texport let sizes;\\n\\t/**\\n\\t * Path to placeholder image.\\n\\t * @type {string}\\n\\t */\\n\\texport let placeholder;\\n\\t/**\\n\\t * Path to image.\\n\\t * @type {string}\\n\\t */\\n\\texport let src;\\n\\t/**\\n\\t * Alt image text description for accessibility.\\n\\t * @type {string}\\n\\t */\\n\\texport let alt;\\n\\tlet imgElement;\\n\\tlet path;\\n\\tlet observer;\\n\\tlet intersected = false;\\n\\tlet loaded = false;\\n\\tlet placeholderAlt = 'placeholder image';\\n\\t$: path = intersected ? src : placeholder;\\n\\tonMount(() => {\\n\\t\\tobserver = new IntersectionObserver(observerCallback);\\n\\t\\tobserver.observe(imgElement);\\n\\t\\treturn () => {\\n\\t\\t\\tobserver.unobserve(imgElement);\\n\\t\\t};\\n\\t});\\n\\tfunction handleLoad() {\\n\\t\\tif (!loaded && path === src) {\\n\\t\\t\\tloaded = true;\\n\\t\\t}\\n\\t}\\n</script>\\n\\n<div class:loaded class=\\"w-full relative\\">\\n\\t<div class=\\"w-full relative overflow-hidden\\">\\n\\t\\t<div style=\\"padding-bottom:{ratio};\\" class=\\"w-full\\">\\n\\t\\t\\t<img class=\\"placeholder\\" class:blur src={placeholder} alt={placeholderAlt} {style} />\\n\\t\\t\\t<picture>\\n\\t\\t\\t\\t<!--default to .avif i-->\\n\\t\\t\\t\\t<source type=\\"image/avif\\" srcset={srcsetAvif} {sizes} />\\n\\n\\t\\t\\t\\t<!--fall back to .webp srcset-->\\n\\t\\t\\t\\t<source type=\\"image/webp\\" srcset={srcsetWebP} {sizes} />\\n\\n\\t\\t\\t\\t<img\\n\\t\\t\\t\\t\\tsrc={path}\\n\\t\\t\\t\\t\\t{alt}\\n\\t\\t\\t\\t\\t{style}\\n\\t\\t\\t\\t\\ton:load={handleLoad}\\n\\t\\t\\t\\t\\tbind:this={imgElement}\\n\\t\\t\\t\\t\\tclass=\\"svelte-lazy-image main\\"\\n\\t\\t\\t\\t\\tclass:svelte-lazy-image--loaded={loaded}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</picture>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<style>img {\\n  object-position: center;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  object-fit: contain;\\n  will-change: opacity;\\n  width: 100%;\\n}\\n.blur {\\n  transition: opacity 1000ms;\\n}\\n.placeholder {\\n  opacity: 1;\\n  transition: opacity 1000ms ease-out;\\n  transition-delay: 0.4s;\\n}\\n.main {\\n  opacity: 0;\\n  transition: opacity 1000ms ease-out;\\n  transition-delay: 0.4s;\\n}\\n.loaded .placeholder {\\n  opacity: 0;\\n  position: absolute;\\n}\\n.loaded .main {\\n  opacity: 1;\\n}</style>\\n"],"names":[],"mappings":"AA6FO,GAAG,8BAAC,CAAC,AACV,eAAe,CAAE,MAAM,CACvB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,UAAU,CAAE,OAAO,CACnB,WAAW,CAAE,OAAO,CACpB,KAAK,CAAE,IAAI,AACb,CAAC,AACD,KAAK,8BAAC,CAAC,AACL,UAAU,CAAE,OAAO,CAAC,MAAM,AAC5B,CAAC,AACD,YAAY,8BAAC,CAAC,AACZ,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,MAAM,CAAC,QAAQ,CACnC,gBAAgB,CAAE,IAAI,AACxB,CAAC,AACD,KAAK,8BAAC,CAAC,AACL,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,MAAM,CAAC,QAAQ,CACnC,gBAAgB,CAAE,IAAI,AACxB,CAAC,AACD,sBAAO,CAAC,YAAY,eAAC,CAAC,AACpB,OAAO,CAAE,CAAC,CACV,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACD,sBAAO,CAAC,KAAK,eAAC,CAAC,AACb,OAAO,CAAE,CAAC,AACZ,CAAC"}`
};
let placeholderAlt = 'placeholder image';
const LazySrcsetPerf = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let observerCallback = function (entries, observer2) {
		entries.forEach((entry) => {
			if (entry.isIntersecting) {
				intersected = true;
				observer2.unobserve(imgElement);
			}
		});
	};
	let { style: style2 } = $$props;
	let { ratio } = $$props;
	let { srcsetWebP } = $$props;
	let { srcsetAvif } = $$props;
	let { sizes: sizes2 } = $$props;
	let { placeholder } = $$props;
	let { src: src2 } = $$props;
	let { alt: alt2 } = $$props;
	let imgElement;
	let path;
	let observer;
	let intersected = false;
	onMount(() => {
		observer = new IntersectionObserver(observerCallback);
		observer.observe(imgElement);
		return () => {
			observer.unobserve(imgElement);
		};
	});
	if ($$props.style === void 0 && $$bindings.style && style2 !== void 0) $$bindings.style(style2);
	if ($$props.ratio === void 0 && $$bindings.ratio && ratio !== void 0) $$bindings.ratio(ratio);
	if ($$props.srcsetWebP === void 0 && $$bindings.srcsetWebP && srcsetWebP !== void 0)
		$$bindings.srcsetWebP(srcsetWebP);
	if ($$props.srcsetAvif === void 0 && $$bindings.srcsetAvif && srcsetAvif !== void 0)
		$$bindings.srcsetAvif(srcsetAvif);
	if ($$props.sizes === void 0 && $$bindings.sizes && sizes2 !== void 0) $$bindings.sizes(sizes2);
	if ($$props.placeholder === void 0 && $$bindings.placeholder && placeholder !== void 0)
		$$bindings.placeholder(placeholder);
	if ($$props.src === void 0 && $$bindings.src && src2 !== void 0) $$bindings.src(src2);
	if ($$props.alt === void 0 && $$bindings.alt && alt2 !== void 0) $$bindings.alt(alt2);
	$$result.css.add(css$5);
	path = intersected ? src2 : placeholder;
	return `<div class="${['w-full relative svelte-1gs6214', '']
		.join(' ')
		.trim()}"><div class="${'w-full relative overflow-hidden'}"><div style="${
		'padding-bottom:' + escape(ratio) + ';'
	}" class="${'w-full'}"><img class="${['placeholder svelte-1gs6214', 'blur']
		.join(' ')
		.trim()}"${add_attribute('src', placeholder, 0)}${add_attribute(
		'alt',
		placeholderAlt,
		0
	)}${add_attribute('style', style2, 0)}>
			<picture>
				<source type="${'image/avif'}"${add_attribute('srcset', srcsetAvif, 0)}${add_attribute(
		'sizes',
		sizes2,
		0
	)}>

				
				<source type="${'image/webp'}"${add_attribute('srcset', srcsetWebP, 0)}${add_attribute(
		'sizes',
		sizes2,
		0
	)}>

				<img${add_attribute('src', path, 0)}${add_attribute('alt', alt2, 0)}${add_attribute(
		'style',
		style2,
		0
	)} class="${['svelte-lazy-image main svelte-1gs6214', ''].join(' ').trim()}"${add_attribute(
		'this',
		imgElement,
		1
	)}></picture></div></div>
</div>`;
});
const format$2 = 'jpeg';
const width$2 = 600;
const height$2 = 600;
const space$2 = 'srgb';
const channels$2 = 3;
const depth$2 = 'uchar';
const density$2 = 72;
const chromaSubsampling$2 = '4:4:4';
const isProgressive$2 = false;
const hasProfile$2 = false;
const hasAlpha$2 = false;
const aspect$2 = 1;
const src$2 = '/_app/assets/headshot1-cddb4609.jpeg';
var proHeadshot = {
	format: format$2,
	width: width$2,
	height: height$2,
	space: space$2,
	channels: channels$2,
	depth: depth$2,
	density: density$2,
	chromaSubsampling: chromaSubsampling$2,
	isProgressive: isProgressive$2,
	hasProfile: hasProfile$2,
	hasAlpha: hasAlpha$2,
	aspect: aspect$2,
	src: src$2
};
var proHeadshotWebP =
	'/_app/assets/headshot1-94b2d3b3.webp 200w, /_app/assets/headshot1-3cc7018c.webp 400w, /_app/assets/headshot1-0376eb38.webp 600w, /_app/assets/headshot1-e64bbd50.webp 1000w';
var proHeadshotAvif =
	'/_app/assets/headshot1-40d6c78d.avif 200w, /_app/assets/headshot1-afca6c84.avif 400w, /_app/assets/headshot1-1a7f97af.avif 600w, /_app/assets/headshot1-873dd150.avif 1000w';
var proHeadshotBlur = '/_app/assets/headshot1-19e47c8f.jpeg';
const format$1 = 'jpeg';
const width$1 = 800;
const height$1 = 600;
const space$1 = 'srgb';
const channels$1 = 3;
const depth$1 = 'uchar';
const density$1 = 72;
const chromaSubsampling$1 = '4:4:4';
const isProgressive$1 = false;
const hasProfile$1 = false;
const hasAlpha$1 = false;
const aspect$1 = 1.3333333333333333;
const src$1 = '/_app/assets/test-905dce3f.jpeg';
var test = {
	format: format$1,
	width: width$1,
	height: height$1,
	space: space$1,
	channels: channels$1,
	depth: depth$1,
	density: density$1,
	chromaSubsampling: chromaSubsampling$1,
	isProgressive: isProgressive$1,
	hasProfile: hasProfile$1,
	hasAlpha: hasAlpha$1,
	aspect: aspect$1,
	src: src$1
};
var Logo =
	'/_app/assets/test-0fd9bf01.webp 500w, /_app/assets/test-c804ea69.webp 1000w, /_app/assets/test-5d8c5f59.webp 2000w';
var Logo2 =
	'/_app/assets/test-0e832812.avif 500w, /_app/assets/test-182888c4.avif 1000w, /_app/assets/test-ccd20230.avif 2000w';
var NahNahNahBlur = '/_app/assets/test-26ba6ed2.jpeg';
function canBeZero(val) {
	if (val === 0) {
		return true;
	}
	return val;
}
function makeAccessor(acc) {
	if (!canBeZero(acc)) return null;
	if (Array.isArray(acc)) {
		return (d) =>
			acc.map((k) => {
				return typeof k !== 'function' ? d[k] : k(d);
			});
	} else if (typeof acc !== 'function') {
		return (d) => d[acc];
	}
	return acc;
}
function fromEntries(iter) {
	const obj = {};
	for (const pair of iter) {
		if (Object(pair) !== pair) {
			throw new TypeError('iterable for fromEntries should yield objects');
		}
		const { 0: key, 1: val } = pair;
		Object.defineProperty(obj, key, {
			configurable: true,
			enumerable: true,
			writable: true,
			value: val
		});
	}
	return obj;
}
function filterObject(obj) {
	return fromEntries(
		Object.entries(obj).filter(([key, value]) => {
			return value !== void 0;
		})
	);
}
function calcExtents(data, fields) {
	if (!Array.isArray(data) || data.length === 0) return null;
	const extents = {};
	const fl = fields.length;
	let i;
	let j;
	let f;
	let val;
	let s;
	if (fl) {
		for (i = 0; i < fl; i += 1) {
			const firstRow = fields[i].accessor(data[0]);
			if (firstRow === void 0 || firstRow === null || Number.isNaN(firstRow) === true) {
				extents[fields[i].field] = [Infinity, -Infinity];
			} else {
				extents[fields[i].field] = Array.isArray(firstRow) ? firstRow : [firstRow, firstRow];
			}
		}
		const dl = data.length;
		for (i = 0; i < dl; i += 1) {
			for (j = 0; j < fl; j += 1) {
				f = fields[j];
				val = f.accessor(data[i]);
				s = f.field;
				if (Array.isArray(val)) {
					const vl = val.length;
					for (let k = 0; k < vl; k += 1) {
						if (val[k] !== void 0 && val[k] !== null && Number.isNaN(val[k]) === false) {
							if (val[k] < extents[s][0]) {
								extents[s][0] = val[k];
							}
							if (val[k] > extents[s][1]) {
								extents[s][1] = val[k];
							}
						}
					}
				} else if (val !== void 0 && val !== null && Number.isNaN(val) === false) {
					if (val < extents[s][0]) {
						extents[s][0] = val;
					}
					if (val > extents[s][1]) {
						extents[s][1] = val;
					}
				}
			}
		}
	} else {
		return null;
	}
	return extents;
}
function partialDomain(domain = [], directive) {
	if (Array.isArray(directive) === true) {
		return directive.map((d, i) => {
			if (d === null) {
				return domain[i];
			}
			return d;
		});
	}
	return domain;
}
function calcDomain(s) {
	return function domainCalc([$extents, $domain]) {
		return $extents ? partialDomain($extents[s], $domain) : $domain;
	};
}
var defaultScales = {
	x: scaleLinear,
	y: scaleLinear,
	z: scaleLinear,
	r: scaleSqrt
};
function findScaleType(scale) {
	if (scale.constant) {
		return 'symlog';
	}
	if (scale.base) {
		return 'log';
	}
	if (scale.exponent) {
		if (scale.exponent() === 0.5) {
			return 'sqrt';
		}
		return 'pow';
	}
	return 'other';
}
function identity(d) {
	return d;
}
function log(sign) {
	return (x) => Math.log(sign * x);
}
function exp(sign) {
	return (x) => sign * Math.exp(x);
}
function symlog(c) {
	return (x) => Math.sign(x) * Math.log1p(Math.abs(x / c));
}
function symexp(c) {
	return (x) => Math.sign(x) * Math.expm1(Math.abs(x)) * c;
}
function pow(exponent) {
	return function powFn(x) {
		return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
	};
}
function getPadFunctions(scale) {
	const scaleType = findScaleType(scale);
	if (scaleType === 'log') {
		const sign = Math.sign(scale.domain()[0]);
		return { lift: log(sign), ground: exp(sign), scaleType };
	}
	if (scaleType === 'pow') {
		const exponent = 1;
		return { lift: pow(exponent), ground: pow(1 / exponent), scaleType };
	}
	if (scaleType === 'sqrt') {
		const exponent = 0.5;
		return { lift: pow(exponent), ground: pow(1 / exponent), scaleType };
	}
	if (scaleType === 'symlog') {
		const constant = 1;
		return { lift: symlog(constant), ground: symexp(constant), scaleType };
	}
	return { lift: identity, ground: identity, scaleType };
}
function padScale(scale, padding) {
	if (typeof scale.range !== 'function') {
		throw new Error('Scale method `range` must be a function');
	}
	if (typeof scale.domain !== 'function') {
		throw new Error('Scale method `domain` must be a function');
	}
	if (!Array.isArray(padding)) {
		return scale.domain();
	}
	if (scale.domain().length !== 2) {
		console.warn(
			"[LayerCake] The scale is expected to have a domain of length 2 to use padding. Are you sure you want to use padding? Your scale's domain is:",
			scale.domain()
		);
	}
	if (scale.range().length !== 2) {
		console.warn(
			"[LayerCake] The scale is expected to have a range of length 2 to use padding. Are you sure you want to use padding? Your scale's range is:",
			scale.range()
		);
	}
	const { lift, ground } = getPadFunctions(scale);
	const d0 = scale.domain()[0];
	const isTime = Object.prototype.toString.call(d0) === '[object Date]';
	const [d1, d2] = scale.domain().map((d) => {
		return isTime ? lift(d.getTime()) : lift(d);
	});
	const [r1, r2] = scale.range();
	const paddingLeft = padding[0] || 0;
	const paddingRight = padding[1] || 0;
	const step = (d2 - d1) / (Math.abs(r2 - r1) - paddingLeft - paddingRight);
	return [d1 - paddingLeft * step, paddingRight * step + d2].map((d) => {
		return isTime ? ground(new Date(d)) : ground(d);
	});
}
function calcBaseRange(s, width2, height2, reverse, percentRange) {
	let min;
	let max;
	if (percentRange === true) {
		min = 0;
		max = 100;
	} else {
		min = s === 'r' ? 1 : 0;
		max = s === 'y' ? height2 : s === 'r' ? 25 : width2;
	}
	return reverse === true ? [max, min] : [min, max];
}
function getDefaultRange(s, width2, height2, reverse, range, percentRange) {
	return !range
		? calcBaseRange(s, width2, height2, reverse, percentRange)
		: typeof range === 'function'
		? range({ width: width2, height: height2 })
		: range;
}
function createScale(s) {
	return function scaleCreator([
		$scale,
		$extents,
		$domain,
		$padding,
		$nice,
		$reverse,
		$width,
		$height,
		$range,
		$percentScale
	]) {
		if ($extents === null) {
			return null;
		}
		const defaultRange = getDefaultRange(s, $width, $height, $reverse, $range, $percentScale);
		const scale = $scale === defaultScales[s] ? $scale() : $scale.copy();
		scale.domain(partialDomain($extents[s], $domain)).range(defaultRange);
		if ($padding) {
			scale.domain(padScale(scale, $padding));
		}
		if ($nice === true) {
			if (typeof scale.nice === 'function') {
				scale.nice();
			} else {
				console.error(
					`[Layer Cake] You set \`${s}Nice: true\` but the ${s}Scale does not have a \`.nice\` method. Ignoring...`
				);
			}
		}
		return scale;
	};
}
function createGetter([$acc, $scale]) {
	return (d) => {
		const val = $acc(d);
		if (Array.isArray(val)) {
			return val.map((v) => $scale(v));
		}
		return $scale(val);
	};
}
function getRange([$scale]) {
	if (typeof $scale === 'function') {
		if (typeof $scale.range === 'function') {
			return $scale.range();
		}
		console.error("[LayerCake] Your scale doesn't have a `.range` method?");
	}
	return null;
}
var defaultReverses = {
	x: false,
	y: true,
	z: false,
	r: false
};
var LayerCake_svelte_svelte_type_style_lang =
	'.layercake-container.svelte-1eyuhc0, .layercake-container.svelte-1eyuhc0 * {\n  box-sizing: border-box;\n}\n.layercake-container.svelte-1eyuhc0 {\n  width: 100%;\n  height: 100%;\n}';
const css$4 = {
	code:
		'.layercake-container.svelte-1eyuhc0,.layercake-container.svelte-1eyuhc0 *{box-sizing:border-box}.layercake-container.svelte-1eyuhc0{width:100%;height:100%}',
	map: `{"version":3,"file":"LayerCake.svelte","sources":["LayerCake.svelte"],"sourcesContent":["<script>\\n  import { setContext } from 'svelte';\\n  import { writable, derived } from 'svelte/store';\\n  import makeAccessor from './utils/makeAccessor.js';\\n  import filterObject from './utils/filterObject.js';\\n  import calcExtents from './lib/calcExtents.js';\\n  import calcDomain from './helpers/calcDomain.js';\\n  import createScale from './helpers/createScale.js';\\n  import createGetter from './helpers/createGetter.js';\\n  import getRange from './helpers/getRange.js';\\n  import defaultScales from './settings/defaultScales.js';\\n  import defaultReverses from './settings/defaultReverses.js';\\n  export let ssr = false;\\n  export let pointerEvents = true;\\n  export let position = 'relative';\\n  export let percentRange = false;\\n  export let width = undefined;\\n  export let height = undefined;\\n  export let containerWidth = width || 100;\\n  export let containerHeight = height || 100;\\n  export let element = undefined;\\n  /* --------------------------------------------\\n   * Parameters\\n   * Values that computed properties are based on and that\\n   * can be easily extended from config values\\n   *\\n   */\\n  export let x = undefined;\\n  export let y = undefined;\\n  export let z = undefined;\\n  export let r = undefined;\\n  export let custom = {};\\n  export let data = [];\\n  export let xDomain = undefined;\\n  export let yDomain = undefined;\\n  export let zDomain = undefined;\\n  export let rDomain = undefined;\\n  export let xNice = false;\\n  export let yNice = false;\\n  export let zNice = false;\\n  export let rNice = false;\\n  export let xReverse = defaultReverses.x;\\n  export let yReverse = defaultReverses.y;\\n  export let zReverse = defaultReverses.z;\\n  export let rReverse = defaultReverses.r;\\n  export let xPadding = undefined;\\n  export let yPadding = undefined;\\n  export let zPadding = undefined;\\n  export let rPadding = undefined;\\n  export let xScale = defaultScales.x;\\n  export let yScale = defaultScales.y;\\n  export let zScale = defaultScales.y;\\n  export let rScale = defaultScales.r;\\n  export let xRange = undefined;\\n  export let yRange = undefined;\\n  export let zRange = undefined;\\n  export let rRange = undefined;\\n  export let padding = {};\\n  export let extents = {};\\n  export let flatData = undefined;\\n  /* --------------------------------------------\\n   * Preserve a copy of our passed in settings before we modify them\\n   * Return this to the user's context so they can reference things if need be\\n   * Add the active keys since those aren't on our settings object.\\n   * This is mostly an escape-hatch\\n   */\\n  const config = {};\\n  $: if (x) config.x = x;\\n  $: if (y) config.y = y;\\n  $: if (z) config.z = z;\\n  $: if (r) config.r = r;\\n  $: if (xDomain) config.xDomain = xDomain;\\n  $: if (yDomain) config.yDomain = yDomain;\\n  $: if (zDomain) config.zDomain = zDomain;\\n  $: if (rDomain) config.rDomain = rDomain;\\n  $: if (xRange) config.xRange = xRange;\\n  $: if (yRange) config.yRange = yRange;\\n  $: if (zRange) config.zRange = zRange;\\n  $: if (rRange) config.rRange = rRange;\\n  /* --------------------------------------------\\n   * Make store versions of each parameter\\n   * Prefix these with \`_\` to keep things organized\\n   */\\n  const _percentRange = writable();\\n  const _containerWidth = writable();\\n  const _containerHeight = writable();\\n  const _x = writable();\\n  const _y = writable();\\n  const _z = writable();\\n  const _r = writable();\\n  const _custom = writable();\\n  const _data = writable();\\n  const _xDomain = writable();\\n  const _yDomain = writable();\\n  const _zDomain = writable();\\n  const _rDomain = writable();\\n  const _xNice = writable();\\n  const _yNice = writable();\\n  const _zNice = writable();\\n  const _rNice = writable();\\n  const _xReverse = writable();\\n  const _yReverse = writable();\\n  const _zReverse = writable();\\n  const _rReverse = writable();\\n  const _xPadding = writable();\\n  const _yPadding = writable();\\n  const _zPadding = writable();\\n  const _rPadding = writable();\\n  const _xScale = writable();\\n  const _yScale = writable();\\n  const _zScale = writable();\\n  const _rScale = writable();\\n  const _xRange = writable();\\n  const _yRange = writable();\\n  const _zRange = writable();\\n  const _rRange = writable();\\n  const _padding = writable();\\n  const _flatData = writable();\\n  const _extents = writable();\\n  const _config = writable(config);\\n  $: _percentRange.set(percentRange);\\n  $: _containerWidth.set(containerWidth);\\n  $: _containerHeight.set(containerHeight);\\n  $: _x.set(makeAccessor(x));\\n  $: _y.set(makeAccessor(y));\\n  $: _z.set(makeAccessor(z));\\n  $: _r.set(makeAccessor(r));\\n  $: _xDomain.set(xDomain);\\n  $: _yDomain.set(yDomain);\\n  $: _zDomain.set(zDomain);\\n  $: _rDomain.set(rDomain);\\n  $: _custom.set(custom);\\n  $: _data.set(data);\\n  $: _xNice.set(xNice);\\n  $: _yNice.set(yNice);\\n  $: _zNice.set(zNice);\\n  $: _rNice.set(rNice);\\n  $: _xReverse.set(xReverse);\\n  $: _yReverse.set(yReverse);\\n  $: _zReverse.set(zReverse);\\n  $: _rReverse.set(rReverse);\\n  $: _xPadding.set(xPadding);\\n  $: _yPadding.set(yPadding);\\n  $: _zPadding.set(zPadding);\\n  $: _rPadding.set(rPadding);\\n  $: _xScale.set(xScale);\\n  $: _yScale.set(yScale);\\n  $: _zScale.set(zScale);\\n  $: _rScale.set(rScale);\\n  $: _xRange.set(xRange);\\n  $: _yRange.set(yRange);\\n  $: _zRange.set(zRange);\\n  $: _rRange.set(rRange);\\n  $: _padding.set(padding);\\n  $: _extents.set(filterObject(extents));\\n  $: _flatData.set(flatData || data);\\n  /* --------------------------------------------\\n   * Create derived values\\n   * Suffix these with \`_d\`\\n   */\\n  const activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {\\n    return [\\n      { field: 'x', accessor: $x },\\n      { field: 'y', accessor: $y },\\n      { field: 'z', accessor: $z },\\n      { field: 'r', accessor: $r }\\n    ].filter(d => d.accessor);\\n  });\\n  const padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {\\n    const defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };\\n    return Object.assign(defaultPadding, $padding);\\n  });\\n  const box_d = derived([_containerWidth, _containerHeight, padding_d], ([$containerWidth, $containerHeight, $padding]) => {\\n    const b = {};\\n    b.top = $padding.top;\\n    b.right = $containerWidth - $padding.right;\\n    b.bottom = $containerHeight - $padding.bottom;\\n    b.left = $padding.left;\\n    b.width = b.right - b.left;\\n    b.height = b.bottom - b.top;\\n    if (b.width <= 0) {\\n      console.error('[LayerCake] Target div has zero or negative width. Did you forget to set an explicit width in CSS on the container?');\\n    }\\n    if (b.height <= 0) {\\n      console.error('[LayerCake] Target div has zero or negative height. Did you forget to set an explicit height in CSS on the container?');\\n    }\\n    return b;\\n  });\\n  const width_d = derived([box_d], ([$box]) => {\\n    return $box.width;\\n  });\\n  const height_d = derived([box_d], ([$box]) => {\\n    return $box.height;\\n  });\\n  /* --------------------------------------------\\n   * Calculate extents by taking the extent of the data\\n   * and filling that in with anything set by the user\\n   */\\n  const extents_d = derived([_flatData, activeGetters_d, _extents], ([$flatData, $activeGetters, $extents]) => {\\n    return { ...calcExtents($flatData, $activeGetters.filter(d => !$extents[d.field])), ...$extents };\\n  });\\n  const xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));\\n  const yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));\\n  const zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));\\n  const rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));\\n  const xScale_d = derived([_xScale, extents_d, xDomain_d, _xPadding, _xNice, _xReverse, width_d, height_d, _xRange, _percentRange], createScale('x'));\\n  const xGet_d = derived([_x, xScale_d], createGetter);\\n  const yScale_d = derived([_yScale, extents_d, yDomain_d, _yPadding, _yNice, _yReverse, width_d, height_d, _yRange, _percentRange], createScale('y'));\\n  const yGet_d = derived([_y, yScale_d], createGetter);\\n  const zScale_d = derived([_zScale, extents_d, zDomain_d, _zPadding, _zNice, _zReverse, width_d, height_d, _zRange, _percentRange], createScale('z'));\\n  const zGet_d = derived([_z, zScale_d], createGetter);\\n  const rScale_d = derived([_rScale, extents_d, rDomain_d, _rPadding, _rNice, _rReverse, width_d, height_d, _rRange, _percentRange], createScale('r'));\\n  const rGet_d = derived([_r, rScale_d], createGetter);\\n  const xRange_d = derived([xScale_d], getRange);\\n  const yRange_d = derived([yScale_d], getRange);\\n  const zRange_d = derived([zScale_d], getRange);\\n  const rRange_d = derived([rScale_d], getRange);\\n  // eslint-disable-next-line no-unused-vars\\n  const aspectRatio_d = derived([width_d, height_d], ([$aspectRatio, $width, $height]) => {\\n    return $width / $height;\\n  });\\n  $: context = {\\n    activeGetters: activeGetters_d,\\n    width: width_d,\\n    height: height_d,\\n    percentRange: _percentRange,\\n    aspectRatio: aspectRatio_d,\\n    containerWidth: _containerWidth,\\n    containerHeight: _containerHeight,\\n    x: _x,\\n    y: _y,\\n    z: _z,\\n    r: _r,\\n    custom: _custom,\\n    data: _data,\\n    xNice: _xNice,\\n    yNice: _yNice,\\n    zNice: _zNice,\\n    rNice: _rNice,\\n    xReverse: _xReverse,\\n    yReverse: _yReverse,\\n    zReverse: _zReverse,\\n    rReverse: _rReverse,\\n    xPadding: _xPadding,\\n    yPadding: _yPadding,\\n    zPadding: _zPadding,\\n    rPadding: _rPadding,\\n    padding: padding_d,\\n    flatData: _flatData,\\n    extents: extents_d,\\n    xDomain: xDomain_d,\\n    yDomain: yDomain_d,\\n    zDomain: zDomain_d,\\n    rDomain: rDomain_d,\\n    xRange: xRange_d,\\n    yRange: yRange_d,\\n    zRange: zRange_d,\\n    rRange: rRange_d,\\n    config: _config,\\n    xScale: xScale_d,\\n    xGet: xGet_d,\\n    yScale: yScale_d,\\n    yGet: yGet_d,\\n    zScale: zScale_d,\\n    zGet: zGet_d,\\n    rScale: rScale_d,\\n    rGet: rGet_d\\n  };\\n  $: setContext('LayerCake', context);\\n</script>\\n\\n{#if (ssr === true || typeof window !== 'undefined')}\\n<div bind:this={element} class=\\"layercake-container\\" style=\\"\\n\\t\\t\\tposition:{position};\\n\\t\\t\\t{position === 'absolute' ? 'top:0;right:0;bottom:0;left:0;' : ''}\\n\\t\\t\\t{pointerEvents === false ? 'pointer-events:none;' : ''}\\n\\t\\t\\" bind:clientWidth={containerWidth} bind:clientHeight={containerHeight}>\\n  <slot {element} width={$width_d} height={$height_d} aspectRatio={$aspectRatio_d} containerWidth={$_containerWidth}\\n    containerHeight={$_containerHeight}></slot>\\n</div>\\n{/if}\\n\\n<style>.layercake-container, .layercake-container :global(*) {\\n  box-sizing: border-box;\\n}\\n.layercake-container {\\n  width: 100%;\\n  height: 100%;\\n}</style>"],"names":[],"mappings":"AA0RO,mCAAoB,CAAE,mCAAoB,CAAC,AAAQ,CAAC,AAAE,CAAC,AAC5D,UAAU,CAAE,UAAU,AACxB,CAAC,AACD,oBAAoB,eAAC,CAAC,AACpB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC"}`
};
const LayerCake = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let context;
	let $width_d, $$unsubscribe_width_d;
	let $height_d, $$unsubscribe_height_d;
	let $aspectRatio_d, $$unsubscribe_aspectRatio_d;
	let $_containerWidth, $$unsubscribe__containerWidth;
	let $_containerHeight, $$unsubscribe__containerHeight;
	let { ssr = false } = $$props;
	let { pointerEvents = true } = $$props;
	let { position = 'relative' } = $$props;
	let { percentRange = false } = $$props;
	let { width: width2 = void 0 } = $$props;
	let { height: height2 = void 0 } = $$props;
	let { containerWidth = width2 || 100 } = $$props;
	let { containerHeight = height2 || 100 } = $$props;
	let { element = void 0 } = $$props;
	let { x = void 0 } = $$props;
	let { y = void 0 } = $$props;
	let { z = void 0 } = $$props;
	let { r = void 0 } = $$props;
	let { custom = {} } = $$props;
	let { data = [] } = $$props;
	let { xDomain = void 0 } = $$props;
	let { yDomain = void 0 } = $$props;
	let { zDomain = void 0 } = $$props;
	let { rDomain = void 0 } = $$props;
	let { xNice = false } = $$props;
	let { yNice = false } = $$props;
	let { zNice = false } = $$props;
	let { rNice = false } = $$props;
	let { xReverse = defaultReverses.x } = $$props;
	let { yReverse = defaultReverses.y } = $$props;
	let { zReverse = defaultReverses.z } = $$props;
	let { rReverse = defaultReverses.r } = $$props;
	let { xPadding = void 0 } = $$props;
	let { yPadding = void 0 } = $$props;
	let { zPadding = void 0 } = $$props;
	let { rPadding = void 0 } = $$props;
	let { xScale = defaultScales.x } = $$props;
	let { yScale = defaultScales.y } = $$props;
	let { zScale = defaultScales.y } = $$props;
	let { rScale = defaultScales.r } = $$props;
	let { xRange = void 0 } = $$props;
	let { yRange = void 0 } = $$props;
	let { zRange = void 0 } = $$props;
	let { rRange = void 0 } = $$props;
	let { padding = {} } = $$props;
	let { extents = {} } = $$props;
	let { flatData = void 0 } = $$props;
	const config = {};
	const _percentRange = writable();
	const _containerWidth = writable();
	$$unsubscribe__containerWidth = subscribe(_containerWidth, (value) => ($_containerWidth = value));
	const _containerHeight = writable();
	$$unsubscribe__containerHeight = subscribe(
		_containerHeight,
		(value) => ($_containerHeight = value)
	);
	const _x = writable();
	const _y = writable();
	const _z = writable();
	const _r = writable();
	const _custom = writable();
	const _data = writable();
	const _xDomain = writable();
	const _yDomain = writable();
	const _zDomain = writable();
	const _rDomain = writable();
	const _xNice = writable();
	const _yNice = writable();
	const _zNice = writable();
	const _rNice = writable();
	const _xReverse = writable();
	const _yReverse = writable();
	const _zReverse = writable();
	const _rReverse = writable();
	const _xPadding = writable();
	const _yPadding = writable();
	const _zPadding = writable();
	const _rPadding = writable();
	const _xScale = writable();
	const _yScale = writable();
	const _zScale = writable();
	const _rScale = writable();
	const _xRange = writable();
	const _yRange = writable();
	const _zRange = writable();
	const _rRange = writable();
	const _padding = writable();
	const _flatData = writable();
	const _extents = writable();
	const _config = writable(config);
	const activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {
		return [
			{ field: 'x', accessor: $x },
			{ field: 'y', accessor: $y },
			{ field: 'z', accessor: $z },
			{ field: 'r', accessor: $r }
		].filter((d) => d.accessor);
	});
	const padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {
		const defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };
		return Object.assign(defaultPadding, $padding);
	});
	const box_d = derived(
		[_containerWidth, _containerHeight, padding_d],
		([$containerWidth, $containerHeight, $padding]) => {
			const b = {};
			b.top = $padding.top;
			b.right = $containerWidth - $padding.right;
			b.bottom = $containerHeight - $padding.bottom;
			b.left = $padding.left;
			b.width = b.right - b.left;
			b.height = b.bottom - b.top;
			if (b.width <= 0) {
				console.error(
					'[LayerCake] Target div has zero or negative width. Did you forget to set an explicit width in CSS on the container?'
				);
			}
			if (b.height <= 0) {
				console.error(
					'[LayerCake] Target div has zero or negative height. Did you forget to set an explicit height in CSS on the container?'
				);
			}
			return b;
		}
	);
	const width_d = derived([box_d], ([$box]) => {
		return $box.width;
	});
	$$unsubscribe_width_d = subscribe(width_d, (value) => ($width_d = value));
	const height_d = derived([box_d], ([$box]) => {
		return $box.height;
	});
	$$unsubscribe_height_d = subscribe(height_d, (value) => ($height_d = value));
	const extents_d = derived(
		[_flatData, activeGetters_d, _extents],
		([$flatData, $activeGetters, $extents]) => {
			return {
				...calcExtents(
					$flatData,
					$activeGetters.filter((d) => !$extents[d.field])
				),
				...$extents
			};
		}
	);
	const xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));
	const yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));
	const zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));
	const rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));
	const xScale_d = derived(
		[
			_xScale,
			extents_d,
			xDomain_d,
			_xPadding,
			_xNice,
			_xReverse,
			width_d,
			height_d,
			_xRange,
			_percentRange
		],
		createScale('x')
	);
	const xGet_d = derived([_x, xScale_d], createGetter);
	const yScale_d = derived(
		[
			_yScale,
			extents_d,
			yDomain_d,
			_yPadding,
			_yNice,
			_yReverse,
			width_d,
			height_d,
			_yRange,
			_percentRange
		],
		createScale('y')
	);
	const yGet_d = derived([_y, yScale_d], createGetter);
	const zScale_d = derived(
		[
			_zScale,
			extents_d,
			zDomain_d,
			_zPadding,
			_zNice,
			_zReverse,
			width_d,
			height_d,
			_zRange,
			_percentRange
		],
		createScale('z')
	);
	const zGet_d = derived([_z, zScale_d], createGetter);
	const rScale_d = derived(
		[
			_rScale,
			extents_d,
			rDomain_d,
			_rPadding,
			_rNice,
			_rReverse,
			width_d,
			height_d,
			_rRange,
			_percentRange
		],
		createScale('r')
	);
	const rGet_d = derived([_r, rScale_d], createGetter);
	const xRange_d = derived([xScale_d], getRange);
	const yRange_d = derived([yScale_d], getRange);
	const zRange_d = derived([zScale_d], getRange);
	const rRange_d = derived([rScale_d], getRange);
	const aspectRatio_d = derived([width_d, height_d], ([$aspectRatio, $width, $height]) => {
		return $width / $height;
	});
	$$unsubscribe_aspectRatio_d = subscribe(aspectRatio_d, (value) => ($aspectRatio_d = value));
	if ($$props.ssr === void 0 && $$bindings.ssr && ssr !== void 0) $$bindings.ssr(ssr);
	if ($$props.pointerEvents === void 0 && $$bindings.pointerEvents && pointerEvents !== void 0)
		$$bindings.pointerEvents(pointerEvents);
	if ($$props.position === void 0 && $$bindings.position && position !== void 0)
		$$bindings.position(position);
	if ($$props.percentRange === void 0 && $$bindings.percentRange && percentRange !== void 0)
		$$bindings.percentRange(percentRange);
	if ($$props.width === void 0 && $$bindings.width && width2 !== void 0) $$bindings.width(width2);
	if ($$props.height === void 0 && $$bindings.height && height2 !== void 0)
		$$bindings.height(height2);
	if ($$props.containerWidth === void 0 && $$bindings.containerWidth && containerWidth !== void 0)
		$$bindings.containerWidth(containerWidth);
	if (
		$$props.containerHeight === void 0 &&
		$$bindings.containerHeight &&
		containerHeight !== void 0
	)
		$$bindings.containerHeight(containerHeight);
	if ($$props.element === void 0 && $$bindings.element && element !== void 0)
		$$bindings.element(element);
	if ($$props.x === void 0 && $$bindings.x && x !== void 0) $$bindings.x(x);
	if ($$props.y === void 0 && $$bindings.y && y !== void 0) $$bindings.y(y);
	if ($$props.z === void 0 && $$bindings.z && z !== void 0) $$bindings.z(z);
	if ($$props.r === void 0 && $$bindings.r && r !== void 0) $$bindings.r(r);
	if ($$props.custom === void 0 && $$bindings.custom && custom !== void 0)
		$$bindings.custom(custom);
	if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
	if ($$props.xDomain === void 0 && $$bindings.xDomain && xDomain !== void 0)
		$$bindings.xDomain(xDomain);
	if ($$props.yDomain === void 0 && $$bindings.yDomain && yDomain !== void 0)
		$$bindings.yDomain(yDomain);
	if ($$props.zDomain === void 0 && $$bindings.zDomain && zDomain !== void 0)
		$$bindings.zDomain(zDomain);
	if ($$props.rDomain === void 0 && $$bindings.rDomain && rDomain !== void 0)
		$$bindings.rDomain(rDomain);
	if ($$props.xNice === void 0 && $$bindings.xNice && xNice !== void 0) $$bindings.xNice(xNice);
	if ($$props.yNice === void 0 && $$bindings.yNice && yNice !== void 0) $$bindings.yNice(yNice);
	if ($$props.zNice === void 0 && $$bindings.zNice && zNice !== void 0) $$bindings.zNice(zNice);
	if ($$props.rNice === void 0 && $$bindings.rNice && rNice !== void 0) $$bindings.rNice(rNice);
	if ($$props.xReverse === void 0 && $$bindings.xReverse && xReverse !== void 0)
		$$bindings.xReverse(xReverse);
	if ($$props.yReverse === void 0 && $$bindings.yReverse && yReverse !== void 0)
		$$bindings.yReverse(yReverse);
	if ($$props.zReverse === void 0 && $$bindings.zReverse && zReverse !== void 0)
		$$bindings.zReverse(zReverse);
	if ($$props.rReverse === void 0 && $$bindings.rReverse && rReverse !== void 0)
		$$bindings.rReverse(rReverse);
	if ($$props.xPadding === void 0 && $$bindings.xPadding && xPadding !== void 0)
		$$bindings.xPadding(xPadding);
	if ($$props.yPadding === void 0 && $$bindings.yPadding && yPadding !== void 0)
		$$bindings.yPadding(yPadding);
	if ($$props.zPadding === void 0 && $$bindings.zPadding && zPadding !== void 0)
		$$bindings.zPadding(zPadding);
	if ($$props.rPadding === void 0 && $$bindings.rPadding && rPadding !== void 0)
		$$bindings.rPadding(rPadding);
	if ($$props.xScale === void 0 && $$bindings.xScale && xScale !== void 0)
		$$bindings.xScale(xScale);
	if ($$props.yScale === void 0 && $$bindings.yScale && yScale !== void 0)
		$$bindings.yScale(yScale);
	if ($$props.zScale === void 0 && $$bindings.zScale && zScale !== void 0)
		$$bindings.zScale(zScale);
	if ($$props.rScale === void 0 && $$bindings.rScale && rScale !== void 0)
		$$bindings.rScale(rScale);
	if ($$props.xRange === void 0 && $$bindings.xRange && xRange !== void 0)
		$$bindings.xRange(xRange);
	if ($$props.yRange === void 0 && $$bindings.yRange && yRange !== void 0)
		$$bindings.yRange(yRange);
	if ($$props.zRange === void 0 && $$bindings.zRange && zRange !== void 0)
		$$bindings.zRange(zRange);
	if ($$props.rRange === void 0 && $$bindings.rRange && rRange !== void 0)
		$$bindings.rRange(rRange);
	if ($$props.padding === void 0 && $$bindings.padding && padding !== void 0)
		$$bindings.padding(padding);
	if ($$props.extents === void 0 && $$bindings.extents && extents !== void 0)
		$$bindings.extents(extents);
	if ($$props.flatData === void 0 && $$bindings.flatData && flatData !== void 0)
		$$bindings.flatData(flatData);
	$$result.css.add(css$4);
	{
		if (x) config.x = x;
	}
	{
		if (y) config.y = y;
	}
	{
		if (z) config.z = z;
	}
	{
		if (r) config.r = r;
	}
	{
		if (xDomain) config.xDomain = xDomain;
	}
	{
		if (yDomain) config.yDomain = yDomain;
	}
	{
		if (zDomain) config.zDomain = zDomain;
	}
	{
		if (rDomain) config.rDomain = rDomain;
	}
	{
		if (xRange) config.xRange = xRange;
	}
	{
		if (yRange) config.yRange = yRange;
	}
	{
		if (zRange) config.zRange = zRange;
	}
	{
		if (rRange) config.rRange = rRange;
	}
	{
		_percentRange.set(percentRange);
	}
	{
		_containerWidth.set(containerWidth);
	}
	{
		_containerHeight.set(containerHeight);
	}
	{
		_x.set(makeAccessor(x));
	}
	{
		_y.set(makeAccessor(y));
	}
	{
		_z.set(makeAccessor(z));
	}
	{
		_r.set(makeAccessor(r));
	}
	{
		_xDomain.set(xDomain);
	}
	{
		_yDomain.set(yDomain);
	}
	{
		_zDomain.set(zDomain);
	}
	{
		_rDomain.set(rDomain);
	}
	{
		_custom.set(custom);
	}
	{
		_data.set(data);
	}
	{
		_xNice.set(xNice);
	}
	{
		_yNice.set(yNice);
	}
	{
		_zNice.set(zNice);
	}
	{
		_rNice.set(rNice);
	}
	{
		_xReverse.set(xReverse);
	}
	{
		_yReverse.set(yReverse);
	}
	{
		_zReverse.set(zReverse);
	}
	{
		_rReverse.set(rReverse);
	}
	{
		_xPadding.set(xPadding);
	}
	{
		_yPadding.set(yPadding);
	}
	{
		_zPadding.set(zPadding);
	}
	{
		_rPadding.set(rPadding);
	}
	{
		_xScale.set(xScale);
	}
	{
		_yScale.set(yScale);
	}
	{
		_zScale.set(zScale);
	}
	{
		_rScale.set(rScale);
	}
	{
		_xRange.set(xRange);
	}
	{
		_yRange.set(yRange);
	}
	{
		_zRange.set(zRange);
	}
	{
		_rRange.set(rRange);
	}
	{
		_padding.set(padding);
	}
	{
		_extents.set(filterObject(extents));
	}
	{
		_flatData.set(flatData || data);
	}
	context = {
		activeGetters: activeGetters_d,
		width: width_d,
		height: height_d,
		percentRange: _percentRange,
		aspectRatio: aspectRatio_d,
		containerWidth: _containerWidth,
		containerHeight: _containerHeight,
		x: _x,
		y: _y,
		z: _z,
		r: _r,
		custom: _custom,
		data: _data,
		xNice: _xNice,
		yNice: _yNice,
		zNice: _zNice,
		rNice: _rNice,
		xReverse: _xReverse,
		yReverse: _yReverse,
		zReverse: _zReverse,
		rReverse: _rReverse,
		xPadding: _xPadding,
		yPadding: _yPadding,
		zPadding: _zPadding,
		rPadding: _rPadding,
		padding: padding_d,
		flatData: _flatData,
		extents: extents_d,
		xDomain: xDomain_d,
		yDomain: yDomain_d,
		zDomain: zDomain_d,
		rDomain: rDomain_d,
		xRange: xRange_d,
		yRange: yRange_d,
		zRange: zRange_d,
		rRange: rRange_d,
		config: _config,
		xScale: xScale_d,
		xGet: xGet_d,
		yScale: yScale_d,
		yGet: yGet_d,
		zScale: zScale_d,
		zGet: zGet_d,
		rScale: rScale_d,
		rGet: rGet_d
	};
	{
		setContext('LayerCake', context);
	}
	$$unsubscribe_width_d();
	$$unsubscribe_height_d();
	$$unsubscribe_aspectRatio_d();
	$$unsubscribe__containerWidth();
	$$unsubscribe__containerHeight();
	return `${
		ssr === true || typeof window !== 'undefined'
			? `<div class="${'layercake-container svelte-1eyuhc0'}" style="${
					'\n			position:' +
					escape(position) +
					';\n			' +
					escape(position === 'absolute' ? 'top:0;right:0;bottom:0;left:0;' : '') +
					'\n			' +
					escape(pointerEvents === false ? 'pointer-events:none;' : '') +
					'\n		'
			  }"${add_attribute('this', element, 1)}>${
					slots.default
						? slots.default({
								element,
								width: $width_d,
								height: $height_d,
								aspectRatio: $aspectRatio_d,
								containerWidth: $_containerWidth,
								containerHeight: $_containerHeight
						  })
						: ``
			  }</div>`
			: ``
	}`;
});
var ScaledSvg_svelte_svelte_type_style_lang =
	'svg.svelte-4zpqg8 {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  overflow: visible;\n}\nsvg.svelte-4zpqg8 * {\n  vector-effect: non-scaling-stroke;\n}';
const css$3 = {
	code:
		'svg.svelte-4zpqg8{position:absolute;width:100%;height:100%;overflow:visible}svg.svelte-4zpqg8 *{vector-effect:non-scaling-stroke}',
	map: `{"version":3,"file":"ScaledSvg.svelte","sources":["ScaledSvg.svelte"],"sourcesContent":["<script>\\n  import { getContext } from 'svelte';\\n  export let element = undefined;\\n  export let fixedAspectRatio = 1;\\n  export let viewBox = \`0 0 100 \${100 / fixedAspectRatio}\`;\\n  export let zIndex = undefined;\\n  export let pointerEvents = undefined;\\n  let zIndexStyle = '';\\n  $: zIndexStyle = typeof zIndex !== 'undefined' ? \`z-index:\${zIndex};\` : '';\\n  let pointerEventsStyle = '';\\n  $: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\\n  const { padding } = getContext('LayerCake');\\n</script>\\n\\n<svg bind:this={element} {viewBox} preserveAspectRatio=\\"none\\"\\n  style=\\"top: {$padding.top}px; right:0px; bottom:0px; left:{$padding.left}px;width:calc(100% - {($padding.left + $padding.right)}px);height:calc(100% - {($padding.top + $padding.bottom)}px);{zIndexStyle}{pointerEventsStyle}\\">\\n  <defs>\\n    <slot name=\\"defs\\"></slot>\\n  </defs>\\n\\n  <slot {element}></slot>\\n</svg>\\n\\n<style>svg {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  overflow: visible;\\n}\\nsvg :global(*) {\\n  vector-effect: non-scaling-stroke;\\n}</style>"],"names":[],"mappings":"AAuBO,GAAG,cAAC,CAAC,AACV,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,OAAO,AACnB,CAAC,AACD,iBAAG,CAAC,AAAQ,CAAC,AAAE,CAAC,AACd,aAAa,CAAE,kBAAkB,AACnC,CAAC"}`
};
const ScaledSvg = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let $padding, $$unsubscribe_padding;
	let { element = void 0 } = $$props;
	let { fixedAspectRatio = 1 } = $$props;
	let { viewBox = `0 0 100 ${100 / fixedAspectRatio}` } = $$props;
	let { zIndex = void 0 } = $$props;
	let { pointerEvents = void 0 } = $$props;
	let zIndexStyle = '';
	let pointerEventsStyle = '';
	const { padding } = getContext('LayerCake');
	$$unsubscribe_padding = subscribe(padding, (value) => ($padding = value));
	if ($$props.element === void 0 && $$bindings.element && element !== void 0)
		$$bindings.element(element);
	if (
		$$props.fixedAspectRatio === void 0 &&
		$$bindings.fixedAspectRatio &&
		fixedAspectRatio !== void 0
	)
		$$bindings.fixedAspectRatio(fixedAspectRatio);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0)
		$$bindings.viewBox(viewBox);
	if ($$props.zIndex === void 0 && $$bindings.zIndex && zIndex !== void 0)
		$$bindings.zIndex(zIndex);
	if ($$props.pointerEvents === void 0 && $$bindings.pointerEvents && pointerEvents !== void 0)
		$$bindings.pointerEvents(pointerEvents);
	$$result.css.add(css$3);
	zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';
	pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';
	$$unsubscribe_padding();
	return `<svg${add_attribute('viewBox', viewBox, 0)} preserveAspectRatio="${'none'}" style="${
		'top: ' +
		escape($padding.top) +
		'px; right:0px; bottom:0px; left:' +
		escape($padding.left) +
		'px;width:calc(100% - ' +
		escape($padding.left + $padding.right) +
		'px);height:calc(100% - ' +
		escape($padding.top + $padding.bottom) +
		'px);' +
		escape(zIndexStyle) +
		escape(pointerEventsStyle)
	}" class="${'svelte-4zpqg8'}"${add_attribute('this', element, 1)}><defs>${
		slots.defs ? slots.defs({ element }) : ``
	}</defs>${slots.default ? slots.default({ element }) : ``}</svg>`;
});
var CalendarMonth_svelte_svelte_type_style_lang =
	'.day.svelte-dg32h5 {\n  stroke: #000;\n  stroke-width: 1;\n  fill: #fff;\n}';
const css$2 = {
	code: '.day.svelte-dg32h5{stroke:#000;stroke-width:1;fill:#fff}',
	map: `{"version":3,"file":"CalendarMonth.svelte","sources":["CalendarMonth.svelte"],"sourcesContent":["<script>\\n  import { getContext } from 'svelte';\\n  import { scaleQuantize } from 'd3-scale';\\n  import { timeFormat } from 'd3-time-format';\\n  import { timeDay } from 'd3-time';\\n\\n  export let calcCellSize = d => d;\\n  export let seriesColors = ['#fff5cc', '#ffeba9', '#ffe182', '#ffd754', '#ffcc00'];\\n\\n  const { width, height, data, x, r, extents } = getContext('LayerCake');\\n\\n  const getDayOfWeek = timeFormat('%w');\\n  const getWeekOfYear = timeFormat('%U');\\n\\n  $: count = date => {\\n    const stringDate = date.toISOString().split('T')[0];\\n    const days = $data.filter(d => $x(d) === stringDate)[0];\\n    if (days) {\\n      return $r(days);\\n    }\\n    return 0;\\n  };\\n\\n  $: colorScale = scaleQuantize()\\n    .domain($extents.r)\\n    .range(seriesColors);\\n\\n  $: fillColor = day => {\\n    const n = count(day);\\n    return n ? colorScale(n) : '#fff';\\n  };\\n\\n  $: cellSize = calcCellSize($width, $height);\\n\\n  let days;\\n\\n  /* --------------------------------------------\\n   * Calculate what month we're in and generate the full days of that month\\n   */\\n  $: {\\n    const minDate = $extents.x[0];\\n    const parts = minDate.split('-').map(d => +d);\\n\\n    days = timeDay.range(new Date(Date.UTC(parts[0], parts[1] - 1, 1)), new Date(Date.UTC(parts[0], parts[1], 1)));\\n  }\\n\\n  $: rectX = day => getDayOfWeek(day) * cellSize;\\n  $: rectY = day => {\\n    const startWeek = getWeekOfYear(new Date(day.getUTCFullYear(), day.getUTCMonth(), 1));\\n    const thisWeek = getWeekOfYear(day);\\n    const weekDiff = thisWeek - startWeek;\\n    return weekDiff * cellSize;\\n  };\\n\\n  function showCount(day) {\\n    console.log(day, count(day));\\n  }\\n</script>\\n\\n{#each days as day}\\n<rect class=\\"day\\" width=\\"{cellSize}\\" height=\\"{cellSize}\\" x=\\"{rectX(day)}\\" y=\\"{rectY(day)}\\"\\n  style=\\"fill:{fillColor(day)};\\" on:mouseenter=\\"{showCount(day)}\\" />\\n{/each}\\n\\n<style>.day {\\n  stroke: #000;\\n  stroke-width: 1;\\n  fill: #fff;\\n}</style>"],"names":[],"mappings":"AAgEO,IAAI,cAAC,CAAC,AACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,CAAC,CACf,IAAI,CAAE,IAAI,AACZ,CAAC"}`
};
const CalendarMonth = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let count;
	let colorScale;
	let fillColor;
	let cellSize;
	let rectX;
	let rectY;
	let $data, $$unsubscribe_data;
	let $x, $$unsubscribe_x;
	let $r, $$unsubscribe_r;
	let $extents, $$unsubscribe_extents;
	let $width, $$unsubscribe_width;
	let $height, $$unsubscribe_height;
	let { calcCellSize = (d) => d } = $$props;
	let { seriesColors = ['#fff5cc', '#ffeba9', '#ffe182', '#ffd754', '#ffcc00'] } = $$props;
	const { width: width2, height: height2, data, x, r, extents } = getContext('LayerCake');
	$$unsubscribe_width = subscribe(width2, (value) => ($width = value));
	$$unsubscribe_height = subscribe(height2, (value) => ($height = value));
	$$unsubscribe_data = subscribe(data, (value) => ($data = value));
	$$unsubscribe_x = subscribe(x, (value) => ($x = value));
	$$unsubscribe_r = subscribe(r, (value) => ($r = value));
	$$unsubscribe_extents = subscribe(extents, (value) => ($extents = value));
	const getDayOfWeek = timeFormat('%w');
	const getWeekOfYear = timeFormat('%U');
	let days;
	if ($$props.calcCellSize === void 0 && $$bindings.calcCellSize && calcCellSize !== void 0)
		$$bindings.calcCellSize(calcCellSize);
	if ($$props.seriesColors === void 0 && $$bindings.seriesColors && seriesColors !== void 0)
		$$bindings.seriesColors(seriesColors);
	$$result.css.add(css$2);
	count = (date) => {
		const stringDate = date.toISOString().split('T')[0];
		const days2 = $data.filter((d) => $x(d) === stringDate)[0];
		if (days2) {
			return $r(days2);
		}
		return 0;
	};
	colorScale = scaleQuantize().domain($extents.r).range(seriesColors);
	fillColor = (day) => {
		const n = count(day);
		return n ? colorScale(n) : '#fff';
	};
	cellSize = calcCellSize($width, $height);
	{
		{
			const minDate = $extents.x[0];
			const parts = minDate.split('-').map((d) => +d);
			days = timeDay.range(
				new Date(Date.UTC(parts[0], parts[1] - 1, 1)),
				new Date(Date.UTC(parts[0], parts[1], 1))
			);
		}
	}
	rectX = (day) => getDayOfWeek(day) * cellSize;
	rectY = (day) => {
		const startWeek = getWeekOfYear(new Date(day.getUTCFullYear(), day.getUTCMonth(), 1));
		const thisWeek = getWeekOfYear(day);
		const weekDiff = thisWeek - startWeek;
		return weekDiff * cellSize;
	};
	$$unsubscribe_data();
	$$unsubscribe_x();
	$$unsubscribe_r();
	$$unsubscribe_extents();
	$$unsubscribe_width();
	$$unsubscribe_height();
	return `${each(
		days,
		(day) =>
			`<rect class="${'day svelte-dg32h5'}"${add_attribute('width', cellSize, 0)}${add_attribute(
				'height',
				cellSize,
				0
			)}${add_attribute('x', rectX(day), 0)}${add_attribute('y', rectY(day), 0)} style="${
				'fill:' + escape(fillColor(day)) + ';'
			}"></rect>`
	)}`;
});
var dates = `2018-07-22T22:25:55Z
2018-07-22T19:35:29Z
2018-07-22T18:54:42Z
2018-07-22T02:05:59Z
2018-07-21T00:55:02Z
2018-07-21T00:53:00Z
2018-07-20T23:32:37Z
2018-07-20T17:52:55Z
2018-07-20T17:52:01Z
2018-07-20T17:32:21Z
2018-07-20T16:38:22Z
2018-07-20T16:38:20Z
2018-07-19T21:07:28Z
2018-07-19T01:36:47Z
2018-07-19T01:00:04Z
2018-07-18T20:15:35Z
2018-07-18T03:05:05Z
2018-07-18T02:56:18Z
2018-07-18T02:11:53Z
2018-07-18T02:08:49Z
2018-07-18T02:02:14Z
2018-07-17T04:13:29Z
2018-07-16T03:24:58Z
2018-07-16T03:23:55Z
2018-07-16T03:22:02Z
2018-07-15T18:37:05Z
2018-07-15T01:34:48Z
2018-07-15T01:11:38Z
2018-07-15T01:02:25Z
2018-07-14T23:32:07Z
2018-07-14T18:26:04Z
2018-07-14T18:25:35Z
2018-07-14T02:56:28Z
2018-07-13T16:33:57Z
2018-07-13T15:52:16Z
2018-07-12T20:31:12Z
2018-07-12T20:27:11Z
2018-07-12T14:17:18Z
2018-07-12T03:49:28Z
2018-07-12T03:42:33Z
2018-07-12T03:20:45Z
2018-07-12T01:47:25Z
2018-07-12T01:26:16Z
2018-07-12T01:16:55Z
2018-07-12T00:50:15Z
2018-07-11T19:16:21Z
2018-07-11T02:38:15Z
2018-07-11T01:03:55Z
2018-07-11T01:00:55Z
2018-07-11T00:59:31Z
2018-07-10T19:06:36Z
2018-07-10T19:03:18Z
2018-07-10T01:05:50Z
2018-07-09T23:43:32Z
2018-07-09T17:39:53Z
2018-07-09T17:37:15Z
2018-07-09T15:50:12Z
2018-07-09T03:47:16Z
2018-07-09T03:06:21Z
2018-07-09T02:59:34Z
2018-07-08T20:53:53Z
2018-07-07T01:37:58Z
2018-07-07T01:32:23Z
2018-07-07T01:30:09Z
2018-07-06T17:03:39Z
2018-07-06T16:00:39Z
2018-07-06T15:59:44Z
2018-07-04T22:29:55Z
2018-07-03T02:59:41Z
2018-07-03T02:58:36Z
2018-07-03T02:56:41Z
2018-07-01T02:21:56Z
2018-07-01T02:20:27Z
2018-07-01T02:15:25Z`;
var index_svelte_svelte_type_style_lang =
	":root {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cxantarell,\n      			'Open Sans', 'Helvetica Neue', sans-serif;\n}\n.chart-container.svelte-1mpzl3i {\n  display: inline-block;\n  position: relative;\n  vertical-align: top;\n  height: 100%;\n  margin-top: 25px;\n}\n.chart-container.svelte-1mpzl3i:before {\n  content: attr(data-month);\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: translate(0, -100%);\n}";
const css$1 = {
	code:
		":root{font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cxantarell,\n    			'Open Sans', 'Helvetica Neue', sans-serif}.chart-container.svelte-1mpzl3i{display:inline-block;position:relative;vertical-align:top;height:100%;margin-top:25px}.chart-container.svelte-1mpzl3i:before{content:attr(data-month);position:absolute;top:0;left:0;transform:translate(0, -100%)}",
	map: `{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script context=\\"module\\">\\n\\t/**\\n\\t * @type {import('@sveltejs/kit').Load}\\n\\t */\\n\\texport async function load({ fetch }) {\\n\\t\\tconst url = \`/api/github/commits.json\`;\\n\\t\\tconst res = await fetch(url);\\n\\n\\t\\tif (res.ok) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tprops: {\\n\\t\\t\\t\\t\\tdata: await res.json()\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\treturn {\\n\\t\\t\\tstatus: res.status,\\n\\t\\t\\terror: new Error(\`Could not load \${url}\`)\\n\\t\\t};\\n\\t}\\n</script>\\n\\n<script>\\n\\texport let data;\\n\\timport { browser } from '$app/env';\\n\\timport Typewriter from 'svelte-typewriter';\\n\\timport LazySrcset from '$lib/images/LazySrcsetPerf.svelte';\\n\\timport proHeadshot from '$static/headshot1.jpg?w=600&meta';\\n\\timport proHeadshotWebP from '$static/headshot1.jpg?w=200;400;600;1000&format=webp&srcset';\\n\\timport proHeadshotAvif from '$static/headshot1.jpg?w=200;400;600;1000&format=avif&srcset';\\n\\timport proHeadshotBlur from '$static/headshot1.jpg?w=300&blur=100&quality=30';\\n\\timport test from '$static/test.jpg?w=800&meta';\\n\\timport testWebP from '$static/test.jpg?w=500;1000;2000&format=webp&srcset';\\n\\timport testAvif from '$static/test.jpg?w=500;1000;2000&format=avif&srcset';\\n\\timport testBlur from '$static/test.jpg?w=300&blur=100&quality=30';\\n\\tlet alt = 'Professional headshot of James Deal';\\n\\tlet proHeadshotRatio = \`\${(1 / (proHeadshot.width / proHeadshot.height)) * 100}%\`;\\n\\tlet testRatio = \`\${(1 / (test.width / test.height)) * 100}%\`;\\n\\tlet sizes = '(min-width: 1500px) 2000px, 100vw';\\n\\tlet headshotSizes = '(min-width: 1500px) 1000px, 100vw';\\n\\tlet style = 'border-radius:50%';\\n\\tif (browser) console.log(data);\\n\\t//test layercake copy github commits\\n\\timport LayerCake from '$lib/graphics/LayerCake.svelte';\\n\\timport ScaledSvg from '$lib/graphics/layouts/ScaledSvg.svelte';\\n\\timport { nest } from 'd3-collection';\\n\\timport CalendarMonth from '$lib/Commits/CalendarMonth.svelte';\\n\\timport dates from '$lib/Commits/dates.js';\\n\\tconst monthNames = [\\n\\t\\t'January',\\n\\t\\t'February',\\n\\t\\t'March',\\n\\t\\t'April',\\n\\t\\t'May',\\n\\t\\t'June',\\n\\t\\t'July',\\n\\t\\t'August',\\n\\t\\t'September',\\n\\t\\t'October',\\n\\t\\t'November',\\n\\t\\t'December'\\n\\t];\\n\\t//$: console.log(dates);\\n\\tconst datesTransformed = dates.split('\\\\n').map((row) => {\\n\\t\\treturn { date: new Date(row), timestring: row };\\n\\t});\\n\\n\\tconst gutter = 10;\\n\\tconst seriesColors = ['#fff5cc', '#ffeba9', '#ffe182', '#ffd754', '#ffcc00'];\\n\\n\\t/* --------------------------------------------\\n\\t * Group by month then by date\\n\\t */\\n\\tconst byMonthByDate = nest()\\n\\t\\t.key((d) => d.date.getUTCMonth())\\n\\t\\t.key((d) => d.timestring.split('T')[0])\\n\\t\\t.entries(datesTransformed);\\n\\n\\tconst sortedData = byMonthByDate.sort((a, b) => a.key - b.key);\\n</script>\\n\\n<svelte:head>\\n\\t<title>The Musings of a Mad Dev</title>\\n\\n\\t<meta\\n\\t\\tname=\\"description\\"\\n\\t\\tcontent=\\"Latest articles, anecdotes, projects, and cool code snippets from James Deal.\\"\\n\\t/>\\n\\t<meta name=\\"keywords\\" content=\\"James Deal, Front End, Back End, Svelte, Javascript\\" />\\n\\n\\t<meta property=\\"og:title\\" content=\\"The Musings of a Mad Dev\\" />\\n\\t<meta\\n\\t\\tproperty=\\"og:description\\"\\n\\t\\tcontent=\\"Latest articles, anecdotes, projects, and cool code snippets from James Deal.\\"\\n\\t/>\\n</svelte:head>\\n\\n<div class=\\"flex flex-col h-40 m-5 text-center mb-15\\">\\n\\t<div class=\\"py-1 relative\\">\\n\\t\\t<Typewriter cursor={false}>\\n\\t\\t\\t<h1 class=\\"font-extralight text-7xl text-red-800 uppercase dark:text-green-400\\">\\n\\t\\t\\t\\tMeet James Deal\\n\\t\\t\\t</h1>\\n\\t\\t</Typewriter>\\n\\t</div>\\n</div>\\n<section class=\\"container mx-auto p-10\\">\\n\\t<div class=\\"flex flex-wrap-reverse mb-40 items-center\\">\\n\\t\\t<div\\n\\t\\t\\tclass=\\"rounded-lg mx-auto bg-opacity-80 bg-blue-300 p-5 lg:w-4/9 lg:p-8 dark:bg-purple-900 dark:bg-opacity-30\\"\\n\\t\\t>\\n\\t\\t\\t<h2\\n\\t\\t\\t\\tclass=\\"font-extralight mb-3 text-3xl text-red-800 uppercase sm:text-5xl dark:text-green-400\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\tAbout Me\\n\\t\\t\\t</h2>\\n\\t\\t\\t<p class=\\"font-extralight text-sm text-gray-800 dark:text-gray-200\\">\\n\\t\\t\\t\\tI'm a 23 year old full-stack developer based out of Austin, TX. Specializing in full-stack\\n\\t\\t\\t\\tdevelopment, with a focus on building light-weight front end applications (SPA/Static, PWA,\\n\\t\\t\\t\\tSSR) using Svelte and backend frameworks that leverage a server written in C++ with node.js\\n\\t\\t\\t\\tbindings for performance. My applications utilize both REST and Websocket API.\\n\\t\\t\\t</p>\\n\\t\\t</div>\\n\\t\\t<div class=\\"mx-auto my-5 w-98\\">\\n\\t\\t\\t<LazySrcset\\n\\t\\t\\t\\tsrc={proHeadshot}\\n\\t\\t\\t\\tratio={proHeadshotRatio}\\n\\t\\t\\t\\tsrcsetWebP={proHeadshotWebP}\\n\\t\\t\\t\\tsrcsetAvif={proHeadshotAvif}\\n\\t\\t\\t\\tsizes={headshotSizes}\\n\\t\\t\\t\\t{style}\\n\\t\\t\\t\\tplaceholder={proHeadshotBlur}\\n\\t\\t\\t\\t{alt}\\n\\t\\t\\t/>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\"flex flex-wrap mb-40 items-center\\">\\n\\t\\t<div class=\\"h-98 my-5 w-98\\">\\n\\t\\t\\t{#each sortedData as month, i}\\n\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\tclass=\\"flex chart-container\\"\\n\\t\\t\\t\\t\\tstyle=\\"width:calc({100 / sortedData.length}% - {gutter}px);{i === 0\\n\\t\\t\\t\\t\\t\\t? \`margin-right:\${gutter * 2}px\`\\n\\t\\t\\t\\t\\t\\t: ''}\\"\\n\\t\\t\\t\\t\\tdata-month={monthNames[+month.key + 1]}\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<LayerCake\\n\\t\\t\\t\\t\\t\\tssr={true}\\n\\t\\t\\t\\t\\t\\tpercentRange={true}\\n\\t\\t\\t\\t\\t\\tpadding={{ top: 1, right: 1, bottom: 1, left: 1 }}\\n\\t\\t\\t\\t\\t\\tx={'key'}\\n\\t\\t\\t\\t\\t\\tr={(d) => d.values.length}\\n\\t\\t\\t\\t\\t\\tdata={month.values}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<ScaledSvg>\\n\\t\\t\\t\\t\\t\\t\\t<CalendarMonth {seriesColors} calcCellSize={() => 100 / 7} />\\n\\t\\t\\t\\t\\t\\t</ScaledSvg>\\n\\t\\t\\t\\t\\t</LayerCake>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/each}\\n\\t\\t</div>\\n\\t\\t<div\\n\\t\\t\\tclass=\\"rounded-lg mx-auto bg-opacity-80 bg-blue-300 p-5 lg:w-4/9 lg:p-8 dark:bg-purple-900 dark:bg-opacity-30\\"\\n\\t\\t>\\n\\t\\t\\t<h2\\n\\t\\t\\t\\tclass=\\"font-extralight mb-3 text-3xl text-red-800 uppercase sm:text-5xl dark:text-green-400\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\tAbout Me\\n\\t\\t\\t</h2>\\n\\t\\t\\t<p class=\\"font-extralight text-sm text-gray-800 dark:text-gray-200\\">\\n\\t\\t\\t\\tI'm a 23 year old full-stack developer based out of Austin, TX. Specializing in full-stack\\n\\t\\t\\t\\tdevelopment, with a focus on building light-weight front end applications (SPA/Static, PWA,\\n\\t\\t\\t\\tSSR) using Svelte and backend frameworks that leverage a server written in C++ with node.js\\n\\t\\t\\t\\tbindings for performance. My applications utilize both REST and Websocket API.\\n\\t\\t\\t</p>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\"flex flex-wrap-reverse mb-40 items-center\\">\\n\\t\\t<div\\n\\t\\t\\tclass=\\"rounded-lg mx-auto bg-opacity-80 bg-blue-300 p-5 lg:w-4/9 lg:p-8 dark:bg-purple-900 dark:bg-opacity-30\\"\\n\\t\\t>\\n\\t\\t\\t<h2\\n\\t\\t\\t\\tclass=\\"font-extralight mb-3 text-3xl text-red-800 uppercase sm:text-5xl dark:text-green-400\\"\\n\\t\\t\\t>\\n\\t\\t\\t\\tAbout Me\\n\\t\\t\\t</h2>\\n\\t\\t\\t<p class=\\"font-extralight text-sm text-gray-800 dark:text-gray-200\\">\\n\\t\\t\\t\\tI'm a 23 year old full-stack developer based out of Austin, TX. Specializing in full-stack\\n\\t\\t\\t\\tdevelopment, with a focus on building light-weight front end applications (SPA/Static, PWA,\\n\\t\\t\\t\\tSSR) using Svelte and backend frameworks that leverage a server written in C++ with node.js\\n\\t\\t\\t\\tbindings for performance. My applications utilize both REST and Websocket API.\\n\\t\\t\\t</p>\\n\\t\\t</div>\\n\\t\\t<div class=\\"mx-auto my-5 w-98\\">\\n\\t\\t\\t<LazySrcset\\n\\t\\t\\t\\tsrc={test}\\n\\t\\t\\t\\tratio={testRatio}\\n\\t\\t\\t\\tsrcsetWebP={testWebP}\\n\\t\\t\\t\\tsrcsetAvif={testAvif}\\n\\t\\t\\t\\t{sizes}\\n\\t\\t\\t\\tplaceholder={testBlur}\\n\\t\\t\\t\\t{alt}\\n\\t\\t\\t/>\\n\\t\\t</div>\\n\\t</div>\\n</section>\\n\\n<style>:root {\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cxantarell,\\n    \\t\\t\\t'Open Sans', 'Helvetica Neue', sans-serif;\\n}\\n.chart-container {\\n  display: inline-block;\\n  position: relative;\\n  vertical-align: top;\\n  height: 100%;\\n  margin-top: 25px;\\n}\\n.chart-container:before {\\n  content: attr(data-month);\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  transform: translate(0, -100%);\\n}</style>\\n"],"names":[],"mappings":"AAkNO,KAAK,AAAC,CAAC,AACZ,WAAW,CAAE,aAAa,CAAC,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC;OAC1F,WAAW,CAAC,CAAC,gBAAgB,CAAC,CAAC,UAAU,AAChD,CAAC,AACD,gBAAgB,eAAC,CAAC,AAChB,OAAO,CAAE,YAAY,CACrB,QAAQ,CAAE,QAAQ,CAClB,cAAc,CAAE,GAAG,CACnB,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IAAI,AAClB,CAAC,AACD,+BAAgB,OAAO,AAAC,CAAC,AACvB,OAAO,CAAE,KAAK,UAAU,CAAC,CACzB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,SAAS,CAAE,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,AAChC,CAAC"}`
};
async function load$1({ fetch }) {
	const url = `/api/github/commits.json`;
	const res = await fetch(url);
	if (res.ok) {
		return { props: { data: await res.json() } };
	}
	return {
		status: res.status,
		error: new Error(`Could not load ${url}`)
	};
}
let alt = 'Professional headshot of James Deal';
let sizes$1 = '(min-width: 1500px) 2000px, 100vw';
let headshotSizes = '(min-width: 1500px) 1000px, 100vw';
let style = 'border-radius:50%';
const gutter = 10;
const Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { data } = $$props;
	let proHeadshotRatio = `${(1 / (proHeadshot.width / proHeadshot.height)) * 100}%`;
	let testRatio = `${(1 / (test.width / test.height)) * 100}%`;
	const monthNames = [
		'January',
		'February',
		'March',
		'April',
		'May',
		'June',
		'July',
		'August',
		'September',
		'October',
		'November',
		'December'
	];
	const datesTransformed = dates.split('\n').map((row) => {
		return { date: new Date(row), timestring: row };
	});
	const seriesColors = ['#fff5cc', '#ffeba9', '#ffe182', '#ffd754', '#ffcc00'];
	const byMonthByDate = nest()
		.key((d) => d.date.getUTCMonth())
		.key((d) => d.timestring.split('T')[0])
		.entries(datesTransformed);
	const sortedData = byMonthByDate.sort((a, b) => a.key - b.key);
	if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
	$$result.css.add(css$1);
	return `${
		(($$result.head += `${
			(($$result.title = `<title>The Musings of a Mad Dev</title>`), '')
		}<meta name="${'description'}" content="${'Latest articles, anecdotes, projects, and cool code snippets from James Deal.'}" class="${'svelte-1mpzl3i'}" data-svelte="svelte-6ogl7i"><meta name="${'keywords'}" content="${'James Deal, Front End, Back End, Svelte, Javascript'}" class="${'svelte-1mpzl3i'}" data-svelte="svelte-6ogl7i"><meta property="${'og:title'}" content="${'The Musings of a Mad Dev'}" class="${'svelte-1mpzl3i'}" data-svelte="svelte-6ogl7i"><meta property="${'og:description'}" content="${'Latest articles, anecdotes, projects, and cool code snippets from James Deal.'}" class="${'svelte-1mpzl3i'}" data-svelte="svelte-6ogl7i">`),
		'')
	}

<div class="${'flex flex-col h-40 m-5 text-center mb-15 svelte-1mpzl3i'}"><div class="${'py-1 relative svelte-1mpzl3i'}">${validate_component(
		Typewriter,
		'Typewriter'
	).$$render(
		$$result,
		{ cursor: false },
		{},
		{
			default: () => `<h1 class="${'font-extralight text-7xl text-red-800 uppercase dark:text-green-400 svelte-1mpzl3i'}">Meet James Deal
			</h1>`
		}
	)}</div></div>
<section class="${'container mx-auto p-10 svelte-1mpzl3i'}"><div class="${'flex flex-wrap-reverse mb-40 items-center svelte-1mpzl3i'}"><div class="${'rounded-lg mx-auto bg-opacity-80 bg-blue-300 p-5 lg:w-4/9 lg:p-8 dark:bg-purple-900 dark:bg-opacity-30 svelte-1mpzl3i'}"><h2 class="${'font-extralight mb-3 text-3xl text-red-800 uppercase sm:text-5xl dark:text-green-400 svelte-1mpzl3i'}">About Me
			</h2>
			<p class="${'font-extralight text-sm text-gray-800 dark:text-gray-200 svelte-1mpzl3i'}">I&#39;m a 23 year old full-stack developer based out of Austin, TX. Specializing in full-stack
				development, with a focus on building light-weight front end applications (SPA/Static, PWA,
				SSR) using Svelte and backend frameworks that leverage a server written in C++ with node.js
				bindings for performance. My applications utilize both REST and Websocket API.
			</p></div>
		<div class="${'mx-auto my-5 w-98 svelte-1mpzl3i'}">${validate_component(
		LazySrcsetPerf,
		'LazySrcset'
	).$$render(
		$$result,
		{
			src: proHeadshot,
			ratio: proHeadshotRatio,
			srcsetWebP: proHeadshotWebP,
			srcsetAvif: proHeadshotAvif,
			sizes: headshotSizes,
			style,
			placeholder: proHeadshotBlur,
			alt
		},
		{},
		{}
	)}</div></div>

	<div class="${'flex flex-wrap mb-40 items-center svelte-1mpzl3i'}"><div class="${'h-98 my-5 w-98 svelte-1mpzl3i'}">${each(
		sortedData,
		(month, i) => `<div class="${'flex chart-container svelte-1mpzl3i'}" style="${
			'width:calc(' +
			escape(100 / sortedData.length) +
			'% - ' +
			escape(gutter) +
			'px);' +
			escape(i === 0 ? `margin-right:${gutter * 2}px` : '')
		}"${add_attribute('data-month', monthNames[+month.key + 1], 0)}>${validate_component(
			LayerCake,
			'LayerCake'
		).$$render(
			$$result,
			{
				ssr: true,
				percentRange: true,
				padding: { top: 1, right: 1, bottom: 1, left: 1 },
				x: 'key',
				r: (d) => d.values.length,
				data: month.values
			},
			{},
			{
				default: () => `${validate_component(ScaledSvg, 'ScaledSvg').$$render(
					$$result,
					{},
					{},
					{
						default: () => `${validate_component(CalendarMonth, 'CalendarMonth').$$render(
							$$result,
							{
								seriesColors,
								calcCellSize: () => 100 / 7
							},
							{},
							{}
						)}
						`
					}
				)}
					`
			}
		)}
				</div>`
	)}</div>
		<div class="${'rounded-lg mx-auto bg-opacity-80 bg-blue-300 p-5 lg:w-4/9 lg:p-8 dark:bg-purple-900 dark:bg-opacity-30 svelte-1mpzl3i'}"><h2 class="${'font-extralight mb-3 text-3xl text-red-800 uppercase sm:text-5xl dark:text-green-400 svelte-1mpzl3i'}">About Me
			</h2>
			<p class="${'font-extralight text-sm text-gray-800 dark:text-gray-200 svelte-1mpzl3i'}">I&#39;m a 23 year old full-stack developer based out of Austin, TX. Specializing in full-stack
				development, with a focus on building light-weight front end applications (SPA/Static, PWA,
				SSR) using Svelte and backend frameworks that leverage a server written in C++ with node.js
				bindings for performance. My applications utilize both REST and Websocket API.
			</p></div></div>

	<div class="${'flex flex-wrap-reverse mb-40 items-center svelte-1mpzl3i'}"><div class="${'rounded-lg mx-auto bg-opacity-80 bg-blue-300 p-5 lg:w-4/9 lg:p-8 dark:bg-purple-900 dark:bg-opacity-30 svelte-1mpzl3i'}"><h2 class="${'font-extralight mb-3 text-3xl text-red-800 uppercase sm:text-5xl dark:text-green-400 svelte-1mpzl3i'}">About Me
			</h2>
			<p class="${'font-extralight text-sm text-gray-800 dark:text-gray-200 svelte-1mpzl3i'}">I&#39;m a 23 year old full-stack developer based out of Austin, TX. Specializing in full-stack
				development, with a focus on building light-weight front end applications (SPA/Static, PWA,
				SSR) using Svelte and backend frameworks that leverage a server written in C++ with node.js
				bindings for performance. My applications utilize both REST and Websocket API.
			</p></div>
		<div class="${'mx-auto my-5 w-98 svelte-1mpzl3i'}">${validate_component(
		LazySrcsetPerf,
		'LazySrcset'
	).$$render(
		$$result,
		{
			src: test,
			ratio: testRatio,
			srcsetWebP: Logo,
			srcsetAvif: Logo2,
			sizes: sizes$1,
			placeholder: NahNahNahBlur,
			alt
		},
		{},
		{}
	)}</div></div>
</section>`;
});
var index$1 = /* @__PURE__ */ Object.freeze({
	__proto__: null,
	[Symbol.toStringTag]: 'Module',
	default: Routes,
	load: load$1
});
var $layout_svelte_svelte_type_style_lang =
	'main.svelte-102ahcs {\n  position: static;\n  padding: 2em;\n  height: 100%;\n  width: 100%;\n  margin: 0 auto;\n  box-sizing: border-box;\n}';
const css = {
	code:
		'main.svelte-102ahcs{position:static;padding:2em;height:100%;width:100%;margin:0 auto;box-sizing:border-box}',
	map:
		'{"version":3,"file":"$layout.svelte","sources":["$layout.svelte"],"sourcesContent":["<svelte:head>\\n  <title>Recent Articles</title>\\n\\n  <meta name=\\"description\\" content=\\"Recent Articles: The latest musings of a sleep deprived dev.\\">\\n  <meta name=\\"keywords\\" content=\\"James Deal, Developer, Front End, Svelte, Back End\\">\\n\\n  <meta property=\\"og:title\\" content=\\"Recent Articles\\" />\\n  <meta property=\\"og:description\\" content=\\"Recent Articles: The latest musings of a sleep deprived dev.\\" />\\n</svelte:head>\\n<main>\\n  <slot></slot>\\n</main>\\n<style>main {\\n  position: static;\\n  padding: 2em;\\n  height: 100%;\\n  width: 100%;\\n  margin: 0 auto;\\n  box-sizing: border-box;\\n}</style>"],"names":[],"mappings":"AAYO,IAAI,eAAC,CAAC,AACX,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,UAAU,CAAE,UAAU,AACxB,CAAC"}'
};
const $layout$2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	$$result.css.add(css);
	return `${
		(($$result.head += `${
			(($$result.title = `<title>Recent Articles</title>`), '')
		}<meta name="${'description'}" content="${'Recent Articles: The latest musings of a sleep deprived dev.'}" data-svelte="svelte-1xuucnw"><meta name="${'keywords'}" content="${'James Deal, Developer, Front End, Svelte, Back End'}" data-svelte="svelte-1xuucnw"><meta property="${'og:title'}" content="${'Recent Articles'}" data-svelte="svelte-1xuucnw"><meta property="${'og:description'}" content="${'Recent Articles: The latest musings of a sleep deprived dev.'}" data-svelte="svelte-1xuucnw">`),
		'')
	}
<main class="${'svelte-102ahcs'}">${slots.default ? slots.default({}) : ``}
</main>`;
});
var $layout$3 = /* @__PURE__ */ Object.freeze({
	__proto__: null,
	[Symbol.toStringTag]: 'Module',
	default: $layout$2
});
async function load({ fetch }) {
	const url = `/articles.json`;
	const res = await fetch(url);
	const jsonBody = await res.json();
	if (res.ok) {
		return {
			props: { posts: JSON.parse(jsonBody.articles) }
		};
	}
	return {
		status: res.status,
		error: new Error(`Could not load ${url}`)
	};
}
const Articles = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { posts: posts2 } = $$props;
	if ($$props.posts === void 0 && $$bindings.posts && posts2 !== void 0) $$bindings.posts(posts2);
	return `${(($$result.head += `${(($$result.title = `<title>Articles</title>`), '')}`), '')}
<div class="${'flex flex-col items-center'}"><div class="${'h-40 sm:h-20'}">${validate_component(
		Typewriter,
		'Typewriter'
	).$$render(
		$$result,
		{ cursor: false },
		{},
		{
			default: () =>
				`<h1 class="${'font-extralight text-7xl text-red-800 uppercase dark:text-green-400'}">Recent Articles</h1>`
		}
	)}</div>
  <div><ul>${each(
		posts2,
		(
			post
		) => `<h2 class="${'font-extralight text-2xl text-red-800 no-underline dark:text-green-400 dark:hover:text-green-600'}"><a href="${
			'articles/read/' + escape(post.slug)
		}">${escape(post.title)}</a></h2>
      <p class="${'font-extralight text-sm text-left text-gray-900 w-3/4 dark:text-gray-200'}">By: James Deal</p>`
	)}</ul></div></div>`;
});
var index = /* @__PURE__ */ Object.freeze({
	__proto__: null,
	[Symbol.toStringTag]: 'Module',
	default: Articles,
	load
});
var prism =
	"code[class*='language-'], pre[class*='language-'] {\n  color: #ccc;\n  background: none;\n  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n  font-size: 1em;\n  text-align: left;\n  white-space: pre;\n  word-spacing: normal;\n  word-break: normal;\n  word-wrap: normal;\n  line-height: 1.5;\n  -moz-tab-size: 4;\n  -o-tab-size: 4;\n  tab-size: 4;\n  -webkit-hyphens: none;\n  -moz-hyphens: none;\n  -ms-hyphens: none;\n  hyphens: none;\n}\npre[class*='language-'] {\n  padding: 1em;\n  margin: 0.5em 0;\n  overflow: auto;\n}\n:not(pre) > code[class*='language-'], pre[class*='language-'] {\n  background: #2d2d2d;\n}\n:not(pre) > code[class*='language-'] {\n  padding: 0.1em;\n  border-radius: 0.3em;\n  white-space: normal;\n}\n.token.comment, .token.block-comment, .token.prolog, .token.doctype, .token.cdata {\n  color: #999;\n}\n.token.punctuation {\n  color: #ccc;\n}\n.token.tag, .token.attr-name, .token.namespace, .token.deleted {\n  color: #e2777a;\n}\n.token.function-name {\n  color: #6196cc;\n}\n.token.boolean, .token.number, .token.function {\n  color: #f08d49;\n}\n.token.property, .token.class-name, .token.constant, .token.symbol {\n  color: #f8c555;\n}\n.token.selector, .token.important, .token.atrule, .token.keyword, .token.builtin {\n  color: #cc99cd;\n}\n.token.string, .token.char, .token.attr-value, .token.regex, .token.variable {\n  color: #7ec699;\n}\n.token.operator, .token.entity, .token.url {\n  color: #67cdcc;\n}\n.token.important, .token.bold {\n  font-weight: bold;\n}\n.token.italic {\n  font-style: italic;\n}\n.token.entity {\n  cursor: help;\n}\n.token.inserted {\n  color: green;\n}\n.content h1 {\n  font-weight: 200;\n  font-size: 4.5rem;\n  line-height: 1;\n  --tw-text-opacity: 1;\n  color: rgba(153, 27, 27, var(--tw-text-opacity));\n  text-align: center;\n  padding: 1rem;\n  word-break: break-all;\n}\n.dark .content h1 {\n  --tw-text-opacity: 1;\n  color: rgba(52, 211, 153, var(--tw-text-opacity));\n}\n.content h2 {\n  font-weight: 200;\n  font-size: 1.875rem;\n  line-height: 2.25rem;\n  --tw-text-opacity: 1;\n  color: rgba(153, 27, 27, var(--tw-text-opacity));\n}\n.dark .content h2 {\n  --tw-text-opacity: 1;\n  color: rgba(52, 211, 153, var(--tw-text-opacity));\n}\n.content h3 {\n  font-weight: 200;\n  font-size: 1.25rem;\n  line-height: 1.75rem;\n  --tw-text-opacity: 1;\n  color: rgba(153, 27, 27, var(--tw-text-opacity));\n  width: 75%;\n}\n.dark .content h3 {\n  --tw-text-opacity: 1;\n  color: rgba(52, 211, 153, var(--tw-text-opacity));\n}\n.content p {\n  font-weight: 200;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  --tw-text-opacity: 1;\n  color: rgba(31, 41, 55, var(--tw-text-opacity));\n}\n.dark .content p {\n  --tw-text-opacity: 1;\n  color: rgba(229, 231, 235, var(--tw-text-opacity));\n}\n.content ul {\n  line-height: 1.5;\n}\n.content li {\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-top: 0px;\n  margin-bottom: 0.5rem;\n}\n.content a {\n  text-decoration: none;\n}\n@media (min-width: 640px) {\n  .content h2 {\n    font-size: 3rem;\n    line-height: 1;\n  }\n}";
const $layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	return `${
		(($$result.head += `<meta property="${'og:type'}" content="${'article'}" data-svelte="svelte-qjgqf4">`),
		'')
	}
<div class="${'container mx-auto p-10'}"><article class="${'text-left text-base content'}" itemscope itemtype="${'http://schema.org/TechArticle'}">${
		slots.default ? slots.default({}) : ``
	}</article>
  <div class="${'flex py-1 twitter justify-center'}"><a class="${'twitter-share-button'}" href="${'https://twitter.com/intent/tweet?text=Check%20this%20out:%20'}" rel="${'noopener'}" data-size="${'large'}">Tweet
    </a>
    <script src="${'https://platform.twitter.com/widgets.js'}"></script></div></div>`;
});
var $layout$1 = /* @__PURE__ */ Object.freeze({
	__proto__: null,
	[Symbol.toStringTag]: 'Module',
	default: $layout
});
const format = 'jpeg';
const width = 300;
const height = 225;
const space = 'srgb';
const channels = 3;
const depth = 'uchar';
const density = 72;
const chromaSubsampling = '4:4:4';
const isProgressive = false;
const hasProfile = false;
const hasAlpha = false;
const aspect = 1.3333333333333333;
const src = '/_app/assets/test-fa3a564e.jpeg';
var NahNahNah = {
	format,
	width,
	height,
	space,
	channels,
	depth,
	density,
	chromaSubsampling,
	isProgressive,
	hasProfile,
	hasAlpha,
	aspect,
	src
};
let sizes = '(min-width: 1500px) 2000px, 100vw';
const Adding_vite_imagetools_to_sveltekit = create_ssr_component(
	($$result, $$props, $$bindings, slots) => {
		let ratio = `${(1 / (NahNahNah.width / NahNahNah.height)) * 100}%`;
		return `${
			(($$result.head += `${
				(($$result.title = `<title>Integrating vite-imagetools and SvelteKit</title>`), '')
			}<meta name="${'description'}" content="${'Article detailing how to successfully integrate vite-imagetools with SvelteKit.'}" data-svelte="svelte-1eegvgc"><meta name="${'keywords'}" content="${'vite, sveltekit, svelte, sharp, image-transformations, vite-imagetools'}" data-svelte="svelte-1eegvgc"><meta property="${'og:title'}" content="${'SvelteKit with vite-imagetools'}" data-svelte="svelte-1eegvgc"><meta property="${'og:description'}" content="${'Successfully integrate vite-imagetools library with SvelteKit'}" data-svelte="svelte-1eegvgc">`),
			'')
		}


<h1 itemprop="${'name'}">Integrating vite-imagetools and SvelteKit </h1>
<div class="${'flex flex-row justify-center'}"><div class="${'w-1/2 inline-block'}">${validate_component(
			LazySrcsetPerf,
			'LazySrcset'
		).$$render(
			$$result,
			{
				src: NahNahNah.src,
				ratio,
				srcsetWebP: Logo,
				srcsetAvif: Logo2,
				sizes,
				placeholder: NahNahNahBlur,
				alt: 'test'
			},
			{},
			{}
		)}</div></div>
<h2 id="${'installing-vite-imagetools'}"><a href="${'#installing-vite-imagetools'}">Installing vite-imagetools</a></h2>
<p>Install vite-imagetools@next as a devDependency in your SvelteKit application (use the package manager of your choice, npm is used for the sake of examples)</p>
<pre class="${'language-bash'}">${`<code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev vite-imagetools@next</code>`}</pre>
<h2 id="${'configure-your-apps-svelteconfigcjs'}"><a href="${'#configure-your-apps-svelteconfigcjs'}">Configure Your App\u2019s svelte.config.cjs</a></h2>
<p>After installing <a href="${'https://github.com/JonasKruckenberg/vite-imagetools'}" rel="${'nofollow'}">vite-imagetools</a>, edit your svelte.config.cjs to include the following:</p>
<pre class="${'language-javascript'}">${`<code class="language-javascript"><span class="token keyword">const</span> node <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@sveltejs/adapter-node'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> pkg <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'./package.json'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">&#123;</span>imagetools<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'vite-imagetools'</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span>

<span class="token comment">/** @type &#123;import('@sveltejs/kit').Config&#125; */</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  kit<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    files<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      assets<span class="token operator">:</span> <span class="token string">'src/static'</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    vite<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      resolve<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        alias<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
          $<span class="token keyword">static</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'src/static'</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#125;</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
      ssr<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        noExternal<span class="token operator">:</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>pkg<span class="token punctuation">.</span>dependencies <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
      plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">imagetools</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>force<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`}</pre>
<p>N.B. the above creates the $static alias for the src/static folder; you can place static assets in this folder and import them using the $static alias</p>
<h2 id="${'example-1-import-png-and-convert-to-webp'}"><a href="${'#example-1-import-png-and-convert-to-webp'}">Example 1: Import .png and Convert to .webp</a></h2>
<pre class="${'language-html'}">${`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> Logo <span class="token keyword">from</span> <span class="token string">'$static/title.png?webp&amp;meta'</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;Logo.src&#125;</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>your alt attribute here<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code>`}</pre>
<h2 id="${'example-2-import-png-transforming-to-3-sizes-formatted-and-rendered-as-srcset'}"><a href="${'#example-2-import-png-transforming-to-3-sizes-formatted-and-rendered-as-srcset'}">Example 2: Import .png, Transforming to 3 Sizes, Formatted and Rendered as srcset</a></h2>
<pre class="${'language-html'}">${`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> Logo <span class="token keyword">from</span> <span class="token string">'$static/title.png?w=300;400;500&amp;format=webp&amp;srcset'</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">srcset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;Logo&#125;</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image/webp<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>your alt attribute here<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code>`}</pre>`;
	}
);
var addingViteImagetoolsToSveltekit = /* @__PURE__ */ Object.freeze({
	__proto__: null,
	[Symbol.toStringTag]: 'Module',
	default: Adding_vite_imagetools_to_sveltekit
});
const Pill = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { text = '' } = $$props;
	let { href = '' } = $$props;
	if ($$props.text === void 0 && $$bindings.text && text !== void 0) $$bindings.text(text);
	if ($$props.href === void 0 && $$bindings.href && href !== void 0) $$bindings.href(href);
	return `${
		href !== ''
			? `<a class="${'rounded-full cursor-pointer font-extralight bg-red-800 my-1 mx-1 text-white text-sm py-1 px-2 inline-block dark:bg-green-300 dark:text-gray-900 hover:transform-gpu hover:-translate-x-1 hover:-translate-y-1 hover:shadow-animate hover:transition hover:duration-300 hover:ease-in-out'}"${add_attribute(
					'href',
					href,
					0
			  )} target="${'_blank'}" rel="${'noopener noreferrer'}">${escape(text)}</a>`
			: `<span class="${'rounded-full cursor-pointer font-extralight bg-red-800 my-1 mx-1 text-white text-sm py-1 px-2 inline-block dark:bg-green-300 dark:text-gray-900 hover:transform-gpu hover:-translate-x-1 hover:-translate-y-1 hover:shadow-animate hover:transition hover:duration-300 hover:ease-in-out hover:'}">${escape(
					text
			  )}</span>`
	}`;
});
const Subtitle = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { title = '' } = $$props;
	let { href = '' } = $$props;
	let { role = '' } = $$props;
	if ($$props.title === void 0 && $$bindings.title && title !== void 0) $$bindings.title(title);
	if ($$props.href === void 0 && $$bindings.href && href !== void 0) $$bindings.href(href);
	if ($$props.role === void 0 && $$bindings.role && role !== void 0) $$bindings.role(role);
	return `${
		href !== '' && role != ''
			? `<h3 class="${'font-extralight text-xl text-center text-red-800 w-3/4 inline-block items-center sm:w-1/2 sm:text-2xl md:text-left md:w-3/4 dark:text-green-400'}"><a${add_attribute(
					'href',
					href,
					0
			  )} target="${'_blank'}" rel="${'noopener noreferrer'}">${escape(title)}</a> / ${escape(
					role
			  )}</h3>`
			: `${
					href !== ''
						? `<h3 class="${'font-extralight text-xl text-center text-red-800 w-3/4 inline-block items-center sm:w-1/2 sm:text-2xl md:text-left md:w-3/4 dark:text-green-400'}"><a${add_attribute(
								'href',
								href,
								0
						  )} target="${'_blank'}" rel="${'noopener noreferrer'}">${escape(title)}</a></h3>`
						: `<h3 class="${'font-extralight text-xl text-center text-red-800 w-1/2 inline-block items-center sm:text-2xl md:text-left md:w-3/4 dark:text-green-400'}">${escape(
								title
						  )}</h3>`
			  }`
	}`;
});
const SectionTitle = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { title } = $$props;
	if ($$props.title === void 0 && $$bindings.title && title !== void 0) $$bindings.title(title);
	return `<div class="${'flex px-5 justify-center items-top md:justify-end lg:px-15'}"><h2 class="${'font-extralight text-3xl text-red-800 uppercase sm:text-5xl dark:text-green-400'}">${escape(
		title
	)}</h2></div>`;
});
const Dates = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { dates: dates2 } = $$props;
	if ($$props.dates === void 0 && $$bindings.dates && dates2 !== void 0) $$bindings.dates(dates2);
	return `<p class="${'font-light text-xs text-center text-gray-900 w-3/4 inline-block items-center sm:w-1/2 md:text-left md:w-3/4 dark:text-gray-200'}">${escape(
		dates2
	)}</p>`;
});
const BulletedList = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { bulletItems } = $$props;
	if ($$props.bulletItems === void 0 && $$bindings.bulletItems && bulletItems !== void 0)
		$$bindings.bulletItems(bulletItems);
	return `<ul class="${'font-extralight list-disc list-inside text-left text-sm text-gray-800 w-3/4 inline-block items-center sm:w-1/2 md:w-3/4 dark:text-gray-200'}">${each(
		bulletItems,
		(itemText) =>
			`${
				Array.isArray(itemText)
					? `<li>${escape(itemText[0])} <a${add_attribute(
							'href',
							itemText[1][1],
							0
					  )} target="${'_blank'}" rel="${'noopener noreferrer'}">${escape(
							itemText[1][0]
					  )}</a></li>`
					: `<li>${escape(itemText)}</li>`
			}`
	)}</ul>`;
});
const titles = {
	edu: 'Education',
	skills: 'Skills',
	graphics: 'Graphics/Data Viz',
	stack: 'My Stack',
	exp: 'Experience'
};
const content = {
	edu: {
		subtitle: 'Texas A&M University',
		dates: 'AUG 2015 - DEC 2018, TX',
		info: [
			'Bachelor of Arts in Philosophy',
			'Business Minor',
			'Undergraduate research into Nietzsche\u2019s concept of ressentiment'
		]
	},
	skills: {
		lang: {
			subtitle: 'Languages',
			list: [`Javascript`, `Typescript`, `NoSQL`, `Bash`]
		},
		libs: {
			subtitle: 'Frameworks/Libraries',
			list: [
				[`Node`, `https://nodejs.org/en/`],
				[`Svelte`, `https://svelte.dev/`],
				[`Sapper`, `https://sapper.svelte.dev/`],
				[`SvelteKit`, `https://kit.svelte.dev/`],
				[`TailwindCSS`, `https://tailwindcss.com/`],
				[`WindiCSS`, `https://windicss.org/`],
				[`Rollup`, `https://rollupjs.org`],
				[`Vite`, `https://vitejs.dev/`],
				[`Express`, `https://expressjs.com/`],
				[`uWebsockets.js`, `https://github.com/uNetworking/uWebSockets.js`]
			]
		},
		graphics: {
			subtitle: 'Graphics/Data Viz',
			list: ['SVG', ['D3.js', `https://d3js.org/`], [`Layer Cake`, `https://layercake.graphics/`]]
		}
	},
	stack: {
		frontend: {
			subtitle: 'Frontend',
			list: ['Current Stack: SvelteKit (Vite + Windi Css)', 'Previously: Sapper (Rollup)']
		},
		backend: {
			subtitle: 'Backend',
			list: [
				'Node.js',
				'uWebsockets.js (REST, Websockets, and Pub/Sub Support)',
				'MongoDb (Native & Mongoose)'
			]
		}
	},
	exp: {
		uw: {
			subtitle: {
				title: 'UnaliWear',
				href: 'https://www.unaliwear.com/',
				role: 'UX, Customer Success & Acquisition'
			},
			dates: 'May 2020 - PRESENT, AUSTIN, TX',
			info: [
				'Worked to train new customers',
				'Fleshed out data aggregation pipelines to gather accelerometer data for on the wrist fall detection (responsible for doubling our dataset)',
				'Oversaw 500% increase in month to month sales rate',
				'Helped automate our workflow',
				'Worked with developers to create tools enabling us to better support our user base'
			]
		},
		reyReyPSC: {
			subtitle: {
				title: 'Reynolds and Reynolds',
				href: 'https://www.reyrey.com/',
				role: 'Software Consultant'
			},
			dates: 'DEC 2018 - MAY 2019, TX',
			info: [
				'Managed ~15 accounts with major car dealerships',
				'Resolved customer issues with the software',
				'Submitted bug reports to development team'
			]
		},
		coss: {
			subtitle: {
				title: 'Cryptocurrency One Stop Solution ($COSS)',
				href: 'https://www.coss.io/',
				role: 'Contract Developer'
			},
			dates: 'OCT 2018 - DEC 2018, REMOTE',
			info: [
				[
					'Contracted to write official Node.Js',
					['API wrapper', 'https://github.com/coss-exchange/trading-api-wrapper-node-js']
				],
				`Worked with COSS's backend head dev to flesh API requirements`,
				'Reported bugs/security vulnerabilities to dev team during beta testing under NDA'
			]
		},
		reyReyIT: {
			subtitle: {
				title: 'Reynolds and Reynolds',
				href: 'https://www.reyrey.com/',
				role: 'IT Consultant (Part Time)'
			},
			dates: 'OCT 2017 - DEC 2018, TX',
			info: [
				'Handled incoming calls and emails to provide IT support for contracted UK clients',
				'Dispatched an Engineer to manage the problem when appropriate'
			]
		}
	}
};
const About = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	return `${
		(($$result.head += `${
			(($$result.title = `<title>My Resume - James Deal</title>`), '')
		}<meta name="${'description'}" content="${'Academic and professional experience, skills, and interests.'}" data-svelte="svelte-1bs0b8b"><meta name="${'keywords'}" content="${'James Deal'}" data-svelte="svelte-1bs0b8b"><meta property="${'og:title'}" content="${'My Resume - James Deal'}" data-svelte="svelte-1bs0b8b"><meta property="${'og:description'}" content="${'My academic and professional experience, skills, and interests.'}" data-svelte="svelte-1bs0b8b">`),
		'')
	}

<div class="${'rounded-lg h-full bg-opacity-80 bg-blue-300 my-5 mx-10 auto-rows-min grid py-5 gap-2 grid-cols-1 break-words md:gap-4 md:grid-cols-2 md:mx-20 lg:mx-30 xl:mx-40 2xl:mx-60 dark:bg-purple-900 dark:bg-opacity-30'}">${validate_component(
		SectionTitle,
		'SectionTitle'
	).$$render($$result, { title: titles.edu }, {}, {})}
	<div class="${'text-center'}">${validate_component(Subtitle, 'Subtitle').$$render(
		$$result,
		{ title: content.edu.subtitle },
		{},
		{}
	)}
		${validate_component(Dates, 'Dates').$$render($$result, { dates: content.edu.dates }, {}, {})}
		${validate_component(BulletedList, 'BulletedList').$$render(
			$$result,
			{ bulletItems: content.edu.info },
			{},
			{}
		)}</div>

	${validate_component(SectionTitle, 'SectionTitle').$$render(
		$$result,
		{ title: titles.skills },
		{},
		{}
	)}
	<div class="${'text-center'}">${validate_component(Subtitle, 'Subtitle').$$render(
		$$result,
		{ title: content.skills.lang.subtitle },
		{},
		{}
	)}
		<div class="${'text-center w-3/4 inline-block md:text-left'}">${each(
		content.skills.lang.list,
		(text) => `${validate_component(Pill, 'Pill').$$render($$result, { text }, {}, {})}`
	)}</div>

		${validate_component(Subtitle, 'Subtitle').$$render(
			$$result,
			{ title: content.skills.libs.subtitle },
			{},
			{}
		)}
		<div class="${'text-center w-3/4 inline-block md:text-left'}">${each(
		content.skills.libs.list,
		(t) =>
			`${validate_component(Pill, 'Pill').$$render($$result, { text: t[0], href: t[1] }, {}, {})}`
	)}</div>

		${validate_component(Subtitle, 'Subtitle').$$render(
			$$result,
			{ title: content.skills.graphics.subtitle },
			{},
			{}
		)}
		<div class="${'text-center w-3/4 inline-block md:text-left'}">${each(
		content.skills.graphics.list,
		(t) =>
			`${
				Array.isArray(t)
					? `${validate_component(Pill, 'Pill').$$render(
							$$result,
							{ text: t[0], href: t[1] },
							{},
							{}
					  )}`
					: `${validate_component(Pill, 'Pill').$$render($$result, { text: t }, {}, {})}`
			}`
	)}</div></div>

	${validate_component(SectionTitle, 'SectionTitle').$$render(
		$$result,
		{ title: titles.stack },
		{},
		{}
	)}
	<div class="${'text-center'}">${validate_component(Subtitle, 'Subtitle').$$render(
		$$result,
		{ title: content.stack.frontend.subtitle },
		{},
		{}
	)}
		${validate_component(BulletedList, 'BulletedList').$$render(
			$$result,
			{ bulletItems: content.stack.frontend.list },
			{},
			{}
		)}
		${validate_component(Subtitle, 'Subtitle').$$render(
			$$result,
			{ title: content.stack.backend.subtitle },
			{},
			{}
		)}
		${validate_component(BulletedList, 'BulletedList').$$render(
			$$result,
			{ bulletItems: content.stack.backend.list },
			{},
			{}
		)}</div>

	${validate_component(SectionTitle, 'SectionTitle').$$render(
		$$result,
		{ title: titles.exp },
		{},
		{}
	)}
	<div class="${'text-center'}">${validate_component(Subtitle, 'Subtitle').$$render(
		$$result,
		{
			title: content.exp.uw.subtitle.title,
			href: content.exp.uw.subtitle.href,
			role: content.exp.uw.subtitle.role
		},
		{},
		{}
	)}
		${validate_component(Dates, 'Dates').$$render($$result, { dates: content.exp.uw.dates }, {}, {})}
		${validate_component(BulletedList, 'BulletedList').$$render(
			$$result,
			{ bulletItems: content.exp.uw.info },
			{},
			{}
		)}

		${validate_component(Subtitle, 'Subtitle').$$render(
			$$result,
			{
				title: content.exp.reyReyPSC.subtitle.title,
				href: content.exp.reyReyPSC.subtitle.href,
				role: content.exp.reyReyPSC.subtitle.role
			},
			{},
			{}
		)}
		${validate_component(Dates, 'Dates').$$render(
			$$result,
			{ dates: content.exp.reyReyPSC.dates },
			{},
			{}
		)}
		${validate_component(BulletedList, 'BulletedList').$$render(
			$$result,
			{ bulletItems: content.exp.reyReyPSC.info },
			{},
			{}
		)}

		${validate_component(Subtitle, 'Subtitle').$$render(
			$$result,
			{
				title: content.exp.coss.subtitle.title,
				href: content.exp.coss.subtitle.href,
				role: content.exp.coss.subtitle.role
			},
			{},
			{}
		)}
		${validate_component(Dates, 'Dates').$$render($$result, { dates: content.exp.coss.dates }, {}, {})}
		${validate_component(BulletedList, 'BulletedList').$$render(
			$$result,
			{ bulletItems: content.exp.coss.info },
			{},
			{}
		)}

		${validate_component(Subtitle, 'Subtitle').$$render(
			$$result,
			{
				title: content.exp.reyReyIT.subtitle.title,
				href: content.exp.reyReyIT.subtitle.href,
				role: content.exp.reyReyIT.subtitle.role
			},
			{},
			{}
		)}
		${validate_component(Dates, 'Dates').$$render(
			$$result,
			{ dates: content.exp.reyReyIT.dates },
			{},
			{}
		)}
		${validate_component(BulletedList, 'BulletedList').$$render(
			$$result,
			{ bulletItems: content.exp.reyReyIT.info },
			{},
			{}
		)}</div></div>`;
});
var about = /* @__PURE__ */ Object.freeze({
	__proto__: null,
	[Symbol.toStringTag]: 'Module',
	default: About
});
export { init, render };
